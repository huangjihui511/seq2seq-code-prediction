package org.jd.gui.service.container;
import org.jd.gui.api.API;
import org.jd.gui.api.model.Container;
import org.jd.gui.model.container.EarContainer;
import org.jd.gui.spi.ContainerFactory;
import org.jd.gui.util.exception.ExceptionUtil;
import java.nio.file.Files;
import java.nio.file.InvalidPathException;
import java.nio.file.Path;
public class EarContainerFactoryProvider implements ContainerFactory {
@Override
public String getType() { return "ear"; }
@Override
public boolean accept(API api, Path rootPath) {
if (rootPath.toUri().toString().toLowerCase().endsWith(".ear!/")) {
return true;
} else {
try {
return rootPath.getFileSystem().provider().getScheme().equals("file") && Files.exists(rootPath.resolve("META-INF/application.xml"));
} catch (InvalidPathException e) {
assert ExceptionUtil.printStackTrace(e);
return false;
}
}
}
@Override
public Container make(API api, Container.Entry parentEntry, Path rootPath) {
return new EarContainer(api, parentEntry, rootPath);
}
}
