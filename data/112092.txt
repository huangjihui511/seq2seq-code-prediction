package org.springframework.data.mongodb.core;
import static org.assertj.core.api.Assertions.*;
import static org.mockito.Mockito.*;
import org.bson.Document;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.dao.support.PersistenceExceptionTranslator;
import org.springframework.data.mongodb.core.MongoTemplate.CloseableIterableCursorAdapter;
import org.springframework.data.mongodb.core.MongoTemplate.DocumentCallback;
import org.springframework.data.util.CloseableIterator;
import com.mongodb.client.MongoCursor;
@ExtendWith(MockitoExtension.class)
class CloseableIterableCursorAdapterUnitTests {
@Mock PersistenceExceptionTranslator exceptionTranslator;
@Mock DocumentCallback<Object> callback;
private MongoCursor<Document> cursor;
private CloseableIterator<Object> adapter;
@BeforeEach
void setUp() {
this.cursor = mock(MongoCursor.class);
this.adapter = new CloseableIterableCursorAdapter<>(cursor, exceptionTranslator, callback);
}
@Test 
void propagatesOriginalExceptionFromAdapterDotNext() {
doThrow(IllegalArgumentException.class).when(cursor).next();
assertThatIllegalArgumentException().isThrownBy(() -> adapter.next());
}
@Test 
void propagatesOriginalExceptionFromAdapterDotHasNext() {
doThrow(IllegalArgumentException.class).when(cursor).hasNext();
assertThatIllegalArgumentException().isThrownBy(() -> adapter.hasNext());
}
@Test 
void propagatesOriginalExceptionFromAdapterDotClose() {
doThrow(IllegalArgumentException.class).when(cursor).close();
assertThatIllegalArgumentException().isThrownBy(() -> adapter.close());
}
}
