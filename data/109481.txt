package com.facebook.presto.operator.aggregation;
import com.facebook.presto.spi.block.Block;
import com.facebook.presto.spi.type.StandardTypes;
import com.google.common.collect.ImmutableList;
import org.apache.commons.math3.stat.correlation.Covariance;
import java.util.List;
import static com.facebook.presto.block.BlockAssertions.createDoubleSequenceBlock;
import static com.facebook.presto.operator.aggregation.AggregationTestUtils.constructDoublePrimitiveArray;
public class TestDoubleCovariancePopAggregation
extends AbstractTestAggregationFunction
{
@Override
public Block[] getSequenceBlocks(int start, int length)
{
return new Block[] {createDoubleSequenceBlock(start, start + length), createDoubleSequenceBlock(start + 5, start + 5 + length)};
}
@Override
protected String getFunctionName()
{
return "covar_pop";
}
@Override
protected List<String> getFunctionParameterTypes()
{
return ImmutableList.of(StandardTypes.DOUBLE, StandardTypes.DOUBLE);
}
@Override
public Object getExpectedValue(int start, int length)
{
if (length <= 0) {
return null;
}
else if (length == 1) {
return 0.;
}
Covariance covariance = new Covariance();
return covariance.covariance(constructDoublePrimitiveArray(start + 5, length), constructDoublePrimitiveArray(start, length), false);
}
}
