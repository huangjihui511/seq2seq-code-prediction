package de.codecentric.boot.admin.client.config;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import javax.annotation.Nullable;
import org.springframework.boot.cloud.CloudPlatform;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.convert.DurationUnit;
import org.springframework.core.env.Environment;
@lombok.Data
@ConfigurationProperties(prefix = "spring.boot.admin.client")
public class ClientProperties {
private String[] url = new String[] {};
private String apiPath = "instances";
@DurationUnit(ChronoUnit.MILLIS)
private Duration period = Duration.ofMillis(10_000L);
@DurationUnit(ChronoUnit.MILLIS)
private Duration connectTimeout = Duration.ofMillis(5_000L);
@DurationUnit(ChronoUnit.MILLIS)
private Duration readTimeout = Duration.ofMillis(5_000L);
@Nullable
private String username;
@Nullable
private String password;
@Nullable
private Boolean autoDeregistration = null;
private boolean autoRegistration = true;
private boolean registerOnce = true;
private boolean enabled = true;
public String[] getAdminUrl() {
String[] adminUrls = this.url.clone();
for (int i = 0; i < adminUrls.length; i++) {
adminUrls[i] += "/" + this.apiPath;
}
return adminUrls;
}
public boolean isAutoDeregistration(Environment environment) {
return (this.autoDeregistration != null) ? this.autoDeregistration
: (CloudPlatform.getActive(environment) != null);
}
}
