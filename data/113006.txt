package org.apache.pdfbox.pdmodel.interactive.annotation;
import org.apache.pdfbox.cos.COSDictionary;
import org.apache.pdfbox.cos.COSArray;
import org.apache.pdfbox.cos.COSInteger;
import org.apache.pdfbox.cos.COSName;
import org.apache.pdfbox.pdmodel.common.COSObjectable;
import org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern;
public class PDBorderStyleDictionary implements COSObjectable
{
public static final String STYLE_SOLID = "S";
public static final String STYLE_DASHED = "D";
public static final String STYLE_BEVELED = "B";
public static final String STYLE_INSET = "I";
public static final String STYLE_UNDERLINE = "U";
private final COSDictionary dictionary;
public PDBorderStyleDictionary()
{
dictionary = new COSDictionary();
}
public PDBorderStyleDictionary(COSDictionary dict)
{
dictionary = dict;
}
@Override
public COSDictionary getCOSObject()
{
return dictionary;
}
public void setWidth(float w)
{
if (Float.compare(w, (int) w) == 0)
{
getCOSObject().setInt(COSName.W, (int) w);
}
else
{
getCOSObject().setFloat(COSName.W, w);
}
}
public float getWidth()
{
if (getCOSObject().getDictionaryObject(COSName.W) instanceof COSName)
{
return 0;
}
return getCOSObject().getFloat(COSName.W, 1);
}
public void setStyle(String s)
{
getCOSObject().setName(COSName.S, s);
}
public String getStyle()
{
return getCOSObject().getNameAsString(COSName.S, STYLE_SOLID);
}
public void setDashStyle(COSArray dashArray)
{
COSArray array = null;
if (dashArray != null)
{
array = dashArray;
}
getCOSObject().setItem(COSName.D, array);
}
public PDLineDashPattern getDashStyle()
{
COSArray d = (COSArray) getCOSObject().getDictionaryObject(COSName.D);
if (d == null)
{
d = new COSArray();
d.add(COSInteger.THREE);
getCOSObject().setItem(COSName.D, d);
}
return new PDLineDashPattern(d, 0);
}
}
