package io.ebean.common;
import java.io.Serializable;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Set;
class ModifyHolder<E> implements Serializable {
private static final long serialVersionUID = 2572572897923801083L;
private Set<E> modifyDeletions = new LinkedHashSet<>();
private Set<E> modifyAdditions = new LinkedHashSet<>();
private boolean touched;
void reset() {
touched = false;
modifyDeletions = new LinkedHashSet<>();
modifyAdditions = new LinkedHashSet<>();
}
void modifyAdditionAll(Collection<? extends E> c) {
if (c != null) {
for (E e : c) {
modifyAddition(e);
}
}
}
private boolean undoDeletion(E bean) {
return (bean != null) && modifyDeletions.remove(bean);
}
void modifyAddition(E bean) {
if (bean != null) {
touched = true;
if (!undoDeletion(bean)) {
modifyAdditions.add(bean);
}
}
}
private boolean undoAddition(Object bean) {
return (bean != null) && modifyAdditions.remove(bean);
}
@SuppressWarnings("unchecked")
void modifyRemoval(Object bean) {
if (bean != null) {
touched = true;
if (!undoAddition(bean)) {
modifyDeletions.add((E) bean);
}
}
}
Set<E> getModifyAdditions() {
return modifyAdditions;
}
Set<E> getModifyRemovals() {
return modifyDeletions;
}
boolean wasTouched() {
return touched;
}
boolean hasModifications() {
return !modifyDeletions.isEmpty() || !modifyAdditions.isEmpty();
}
}
