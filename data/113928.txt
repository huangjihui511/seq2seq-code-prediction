package org.spongepowered.mod.data;
import net.minecraft.block.BlockLiquid;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraftforge.fluids.BlockFluidBase;
import net.minecraftforge.fluids.IFluidBlock;
import org.spongepowered.api.data.property.block.MatterProperty;
import org.spongepowered.api.world.Location;
import org.spongepowered.common.data.property.store.common.AbstractBlockPropertyStore;
import java.util.Optional;
import javax.annotation.Nullable;
public class ForgeMatterPropertyStore extends AbstractBlockPropertyStore<MatterProperty> {
private static final MatterProperty SOLID = new MatterProperty(MatterProperty.Matter.SOLID);
private static final MatterProperty LIQUID = new MatterProperty(MatterProperty.Matter.LIQUID);
private static final MatterProperty GAS = new MatterProperty(MatterProperty.Matter.GAS);
public ForgeMatterPropertyStore() {
super(true);
}
@Override
protected Optional<MatterProperty> getForBlock(@Nullable Location<?> location, IBlockState block) {
if (block.getBlock() instanceof BlockLiquid || block.getBlock() instanceof BlockFluidBase || block.getBlock() instanceof IFluidBlock) {
return Optional.of(LIQUID);
} else if (block.getMaterial() == Material.AIR) {
return Optional.of(GAS);
} else {
return Optional.of(SOLID);
}
}
@Override
public int getPriority() {
return 101;
}
}
