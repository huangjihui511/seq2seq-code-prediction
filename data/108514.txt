package org.deeplearning4j.text.treeparser;
import org.cleartk.syntax.constituent.type.TreebankNode;
import org.deeplearning4j.BaseDL4JTest;
import org.deeplearning4j.nn.layers.feedforward.autoencoder.recursive.Tree;
import org.deeplearning4j.text.corpora.treeparser.TreeParser;
import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;
import static org.junit.Assert.assertEquals;
public class TreeParserTest extends BaseDL4JTest {
private TreeParser parser;
@Before
public void init() throws Exception {
parser = new TreeParser();
}
@Test
public void testNumTrees() throws Exception {
List<Tree> trees = parser.getTrees("This is one sentence. This is another sentence.");
assertEquals(2, trees.size());
}
@Test
public void testHierarchy() throws Exception {
List<Tree> trees = parser.getTrees("This is one sentence. This is another sentence.");
List<TreebankNode> treebankTrees = parser.getTreebankTrees("This is one sentence. This is another sentence.");
assertEquals(treebankTrees.size(), trees.size());
for (int i = 0; i < treebankTrees.size(); i++) {
Tree t = trees.get(i);
TreebankNode t2 = treebankTrees.get(i);
assertEquals(t.children().size(), t2.getChildren().size());
}
}
}
