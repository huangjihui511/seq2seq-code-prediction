package com.kalessil.phpStorm.phpInspectionsEA.utils;
import com.intellij.codeInsight.PsiEquivalenceUtil;
import com.intellij.openapi.progress.ProcessCanceledException;
import com.intellij.psi.PsiElement;
import com.jetbrains.php.lang.psi.elements.Variable;
import org.jetbrains.annotations.NotNull;
final public class OpenapiEquivalenceUtil {
public static boolean areEqual(@NotNull PsiElement first, @NotNull PsiElement second) {
boolean result = false;
try {
if (first.getClass() == second.getClass()) {
if (first instanceof Variable && second instanceof Variable) {
final String firstName  = ((Variable) first).getName();
final String secondName = ((Variable) second).getName();
if (!firstName.isEmpty() && !secondName.isEmpty()) {
result = firstName.equals(secondName);
} else {
result = PsiEquivalenceUtil.areElementsEquivalent(first, second);
}
} else {
result = PsiEquivalenceUtil.areElementsEquivalent(first, second) ||
first.getText().equals(second.getText());
}
}
} catch (final Throwable error) {
if (error instanceof ProcessCanceledException) {
throw error;
}
result = false;
}
return result;
}
}
