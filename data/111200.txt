package com.github.benmanes.caffeine.cache.node;
import static com.github.benmanes.caffeine.cache.Specifications.kTypeVar;
import static com.github.benmanes.caffeine.cache.Specifications.newFieldOffset;
import javax.lang.model.element.Modifier;
import com.squareup.javapoet.FieldSpec;
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public final class AddKey extends NodeRule {
@Override
protected boolean applies() {
return isBaseClass();
}
@Override
protected void execute() {
context.nodeSubtype
.addField(newFieldOffset(context.className, "key"))
.addField(newKeyField())
.addMethod(newGetter(keyStrength(), kTypeVar, "key", Visibility.LAZY))
.addMethod(newGetRef("key"));
}
private FieldSpec newKeyField() {
FieldSpec.Builder fieldSpec = isStrongKeys()
? FieldSpec.builder(kTypeVar, "key", Modifier.VOLATILE)
: FieldSpec.builder(keyReferenceType(), "key", Modifier.VOLATILE);
return fieldSpec.build();
}
}
