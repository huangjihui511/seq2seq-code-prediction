package org.dstadler.jgit;
Copyright 2013, 2014 Dominik Stadler
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http:
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
import org.apache.commons.io.FileUtils;
import org.dstadler.jgit.helper.CookbookHelper;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.lib.Ref;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
import java.io.File;
import java.io.IOException;
public class OpenRepository {
public static void main(String[] args) throws IOException, GitAPIException {
File repoDir = createSampleGitRepo();
FileRepositoryBuilder builder = new FileRepositoryBuilder();
try (Repository repository = builder.setGitDir(repoDir)
.readEnvironment() 
.findGitDir() 
.build()) {
System.out.println("Having repository: " + repository.getDirectory());
Ref head = repository.exactRef("refs/heads/master");
System.out.println("Ref of refs/heads/master: " + head);
}
FileUtils.deleteDirectory(repoDir.getParentFile());
}
private static File createSampleGitRepo() throws IOException, GitAPIException {
try (Repository repository = CookbookHelper.createNewRepository()) {
System.out.println("Temporary repository at " + repository.getDirectory());
File myFile = new File(repository.getDirectory().getParent(), "testfile");
if(!myFile.createNewFile()) {
throw new IOException("Could not create file " + myFile);
}
try (Git git = new Git(repository)) {
git.add()
.addFilepattern("testfile")
.call();
git.commit()
.setMessage("Added testfile")
.call();
}
System.out.println("Added file " + myFile + " to repository at " + repository.getDirectory());
return repository.getDirectory();
}
}
}
