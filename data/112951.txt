package io.kubernetes.client.extended.workqueue.ratelimiter;
import java.time.Duration;
import java.util.Arrays;
public class DefaultControllerRateLimiter<T> implements RateLimiter<T> {
private RateLimiter<T> internalRateLimiter;
public DefaultControllerRateLimiter() {
this.internalRateLimiter =
new MaxOfRateLimiter<>(
Arrays.asList(
new ItemExponentialFailureRateLimiter<>(
Duration.ofMillis(5), Duration.ofSeconds(1000)),
new BucketRateLimiter<>(100, 10, Duration.ofMinutes(1))));
}
@Override
public Duration when(T item) {
return internalRateLimiter.when(item);
}
@Override
public void forget(T item) {
internalRateLimiter.forget(item);
}
@Override
public int numRequeues(T item) {
return internalRateLimiter.numRequeues(item);
}
}
