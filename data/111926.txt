package io.hawt.jmx;
import java.io.InputStream;
import java.lang.management.ManagementFactory;
import java.util.Properties;
import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import io.hawt.util.Objects;
public class About implements AboutMBean {
private ObjectName objectName;
private MBeanServer mBeanServer;
private String hawtioVersion;
public void init() throws Exception {
if (objectName == null) {
objectName = getObjectName();
}
if (mBeanServer == null) {
mBeanServer = ManagementFactory.getPlatformMBeanServer();
}
if (mBeanServer != null) {
try {
mBeanServer.registerMBean(this, objectName);
} catch (InstanceAlreadyExistsException iaee) {
mBeanServer.unregisterMBean(objectName);
mBeanServer.registerMBean(this, objectName);
}
try {
hawtioVersion = doGetHawtioVersion();
} catch (Exception e) {
}
}
}
public void destroy() throws Exception {
if (mBeanServer != null) {
if (objectName != null) {
mBeanServer.unregisterMBean(objectName);
}
}
}
protected ObjectName getObjectName() throws Exception {
return new ObjectName("hawtio:type=About");
}
@Override
public String getHawtioVersion() {
if (hawtioVersion != null) {
return hawtioVersion;
}
return doGetHawtioVersion();
}
private synchronized String doGetHawtioVersion() {
String version = Objects.getVersion(getClass(), "io.hawt", "hawtio-web");
if (version == null) {
version = Objects.getVersion(getClass(), "io.hawt", "hawtio-app");
}
if (version == null) {
version = Objects.getVersion(getClass(), "io.hawt", "hawtio-default");
}
if (version != null) {
return version;
}
InputStream is = null;
try {
Properties p = new Properties();
is = Thread.currentThread().getContextClassLoader().getResourceAsStream("/META-INF/maven/io.hawt/hawtio-web/pom.properties");
if (is == null) {
is = Thread.currentThread().getContextClassLoader().getResourceAsStream("/META-INF/maven/io.hawt/hawtio-default/pom.properties");
}
if (is == null) {
is = Thread.currentThread().getContextClassLoader().getResourceAsStream("/META-INF/maven/io.hawt/hawtio-app/pom.properties");
}
if (is == null) {
is = Thread.currentThread().getContextClassLoader().getResourceAsStream("/META-INF/maven/io.hawt/hawtio-embedded/pom.properties");
}
is = Thread.currentThread().getContextClassLoader().getResourceAsStream("/META-INF/MANIFEST.MF");
if (is != null) {
p.load(is);
version = p.getProperty("Bundle-Version", null);
if (version == null) {
version = p.getProperty("version", "");
}
}
} catch (Exception e) {
e.printStackTrace();
} finally {
if (is != null) {
try {
is.close();
} catch (Exception e) {
}
}
}
if (version == null) {
Package aPackage = Thread.currentThread().getContextClassLoader().getClass().getPackage();
if (aPackage != null) {
version = aPackage.getImplementationVersion();
if (version == null) {
version = aPackage.getSpecificationVersion();
}
}
}
if (version == null) {
version = "";
}
return version;
}
}
