package org.apache.zookeeper.graph.servlets;
import java.io.File;
import java.io.IOException;
import java.io.FileNotFoundException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import org.apache.zookeeper.graph.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
public class GraphData extends JsonServlet
{
private static final Logger LOG = LoggerFactory.getLogger(GraphData.class);
private static final int DEFAULT_PERIOD = 1000;
private LogSource source = null;
public GraphData(LogSource src) throws Exception {
this.source = src;
}
String handleRequest(JsonRequest request) throws Exception {
long starttime = 0;
long endtime = 0;
long period = 0;
FilterOp fo = null;
starttime = request.getNumber("start", 0);
endtime = request.getNumber("end", 0);
period = request.getNumber("period", 0);
String filterstr = request.getString("filter", "");
if (filterstr.length() > 0) {
fo = new FilterParser(filterstr).parse();
}
if (starttime == 0) { starttime = source.getStartTime(); }
if (endtime == 0) {
if (period > 0) {
endtime = starttime + period;
} else {
endtime = starttime + DEFAULT_PERIOD;
}
}
if (LOG.isDebugEnabled()) {
LOG.debug("handle(start= " + starttime + ", end=" + endtime + ", period=" + period + ")");
}
LogIterator iterator = (fo != null) ?
source.iterator(starttime, endtime, fo) : source.iterator(starttime, endtime);
return new JsonGenerator(iterator).toString();
}
}
