package org.apache.parquet.cli.util;
import org.apache.avro.file.SeekableInput;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import java.io.IOException;
import java.io.InputStream;
public class SeekableFSDataInputStream extends InputStream implements SeekableInput {
private final FSDataInputStream in;
private final FileStatus stat;
public SeekableFSDataInputStream(FileSystem fs, Path file) throws IOException {
this.in = fs.open(file);
this.stat = fs.getFileStatus(file);
}
@Override
public void seek(long p) throws IOException {
in.seek(p);
}
@Override
public long tell() throws IOException {
return in.getPos();
}
@Override
public long length() throws IOException {
return stat.getLen();
}
@Override
public int read(byte[] b) throws IOException {
return in.read(b);
}
@Override
public int read() throws IOException {
return in.read();
}
@Override
public int read(byte[] b, int off, int len) throws IOException {
return in.read(b, off, len);
}
@Override
public void close() throws IOException {
in.close();
}
}
