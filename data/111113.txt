package org.apereo.cas.support.saml;
import org.apereo.cas.authentication.CoreAuthenticationTestUtils;
import org.apereo.cas.authentication.ProtocolAttributeEncoder;
import org.apereo.cas.support.saml.web.idp.profile.builders.enc.attribute.SamlAttributeEncoder;
import org.apereo.cas.util.EncodingUtils;
import lombok.val;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import java.util.HashMap;
import static org.junit.jupiter.api.Assertions.*;
@Tag("SAML")
public class SamlAttributeEncoderTests {
@Test
public void verifyAction() {
val encoder = new SamlAttributeEncoder();
val original = CoreAuthenticationTestUtils.getAttributes();
original.put("address", EncodingUtils.hexEncode("123 Main Street"));
val attributes = encoder.encodeAttributes(original, CoreAuthenticationTestUtils.getRegisteredService());
assertEquals(original.size(), attributes.size());
assertTrue(attributes.containsKey("address"));
}
@Test
public void ensureSamlUrnAttributesEncoded() {
val encoder = new SamlAttributeEncoder();
val attributes = new HashMap<String, Object>();
attributes.put(ProtocolAttributeEncoder.encodeAttribute("urn:oid:2.5.4.3"), "testValue");
val result = encoder.encodeAttributes(attributes, CoreAuthenticationTestUtils.getRegisteredService("test"));
assertTrue(result.containsKey("urn:oid:2.5.4.3"));
}
@Test
public void ensureSamlMsftClaimsAttributesEncoded() {
val encoder = new SamlAttributeEncoder();
val attributes = new HashMap<String, Object>();
attributes.put("http:
val result = encoder.encodeAttributes(attributes, CoreAuthenticationTestUtils.getRegisteredService("test"));
assertTrue(result.containsKey("http:
}
}
