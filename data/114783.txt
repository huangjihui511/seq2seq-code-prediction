package com.briup.common;
import java.io.InputStream;
import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
public class MybatisSessionFactory {
private static String CONFIG_FILE_LOCATION = "mybatis-config.xml";
private static final ThreadLocal<SqlSession> threadLocal = new ThreadLocal<SqlSession>();
private static SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
private static SqlSessionFactory sessionFactory;
private static String configFile = CONFIG_FILE_LOCATION;
private MybatisSessionFactory() {
}
public static SqlSession getSession(){
SqlSession session = (SqlSession) threadLocal.get();
if (session == null) {
if (sessionFactory == null) {
rebuildSessionFactory();
}
session = (sessionFactory != null) ? sessionFactory.openSession()
: null;
threadLocal.set(session);
}
return session;
}
public static void rebuildSessionFactory() {
try {
InputStream is = Resources.getResourceAsStream(configFile);
sessionFactory = builder.build(is);
} catch (Exception e) {
System.err
.println("%%%% Error Creating SessionFactory %%%%");
e.printStackTrace();
}
}
public static void closeSession() throws Exception {
SqlSession session = (SqlSession) threadLocal.get();
threadLocal.set(null);
if (session != null) {
session.close();
}
}
public static SqlSessionFactory getSqlSessionFactory() {
return sessionFactory;
}
public static void setConfigFile(String configFile) {
MybatisSessionFactory.configFile = configFile;
sessionFactory = null;
}
}
