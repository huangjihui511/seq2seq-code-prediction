package org.menacheri.jetclient.handlers.netty;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelPipelineFactory;
import org.jboss.netty.channel.Channels;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.jboss.netty.handler.codec.frame.LengthFieldPrepender;
import org.menacheri.jetclient.app.Session;
import org.menacheri.jetclient.communication.MessageBuffer;
import org.menacheri.jetclient.event.Event;
public class TCPPipelineFactory implements ChannelPipelineFactory
{
private static final LengthFieldPrepender LENGTH_FIELD_PREPENDER = new LengthFieldPrepender(
2);
private static final MessageBufferEventDecoder EVENT_DECODER = new MessageBufferEventDecoder();
private static final MessageBufferEventEncoder EVENT_ENCODER = new MessageBufferEventEncoder();
private final DefaultToClientHandler defaultToClientHandler;
public TCPPipelineFactory(Session session)
{
this.defaultToClientHandler = new DefaultToClientHandler(session);
}
@Override
public ChannelPipeline getPipeline() throws Exception
{
ChannelPipeline pipeline = Channels.pipeline();
pipeline.addLast("lengthDecoder", new LengthFieldBasedFrameDecoder(
Integer.MAX_VALUE, 0, 2, 0, 2));
pipeline.addLast("eventDecoder", EVENT_DECODER);
pipeline.addLast(DefaultToClientHandler.getName(),
defaultToClientHandler);
pipeline.addLast("lengthFieldPrepender", LENGTH_FIELD_PREPENDER);
pipeline.addLast("eventEncoder", EVENT_ENCODER);
return pipeline;
}
}
