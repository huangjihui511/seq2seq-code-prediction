package com.flipkart.android.proteus.processor;
import android.content.Context;
import android.content.res.TypedArray;
import android.view.View;
import com.flipkart.android.proteus.ProteusConstants;
import com.flipkart.android.proteus.value.AttributeResource;
import com.flipkart.android.proteus.value.Resource;
import com.flipkart.android.proteus.value.StyleResource;
import com.flipkart.android.proteus.value.Value;
import androidx.annotation.Nullable;
public abstract class StringAttributeProcessor<V extends View> extends AttributeProcessor<V> {
@Override
public void handleValue(V view, Value value) {
if (value.isPrimitive() || value.isNull()) {
setString(view, value.getAsString());
} else {
setString(view, "[Object]");
}
}
@Override
public void handleResource(V view, Resource resource) {
String string = resource.getString(view.getContext());
setString(view, null == string ? ProteusConstants.EMPTY : string);
}
@Override
public void handleAttributeResource(V view, AttributeResource attribute) {
TypedArray a = attribute.apply(view.getContext());
setString(view, a.getString(0));
}
@Override
public void handleStyleResource(V view, StyleResource style) {
TypedArray a = style.apply(view.getContext());
setString(view, a.getString(0));
}
public abstract void setString(V view, String value);
@Override
public Value compile(@Nullable Value value, Context context) {
if (null == value || value.isNull()) {
return ProteusConstants.EMPTY_STRING;
}
return value;
}
}
