package com.site.blog.my.core.controller.admin;
import com.site.blog.my.core.service.CommentService;
import com.site.blog.my.core.util.PageQueryUtil;
import com.site.blog.my.core.util.Result;
import com.site.blog.my.core.util.ResultGenerator;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.Map;
@Controller
@RequestMapping("/admin")
public class CommentController {
@Resource
private CommentService commentService;
@GetMapping("/comments/list")
@ResponseBody
public Result list(@RequestParam Map<String, Object> params) {
if (StringUtils.isEmpty(params.get("page")) || StringUtils.isEmpty(params.get("limit"))) {
}
PageQueryUtil pageUtil = new PageQueryUtil(params);
return ResultGenerator.genSuccessResult(commentService.getCommentsPage(pageUtil));
}
@PostMapping("/comments/checkDone")
@ResponseBody
public Result checkDone(@RequestBody Integer[] ids) {
if (ids.length < 1) {
}
if (commentService.checkDone(ids)) {
return ResultGenerator.genSuccessResult();
} else {
}
}
@PostMapping("/comments/reply")
@ResponseBody
public Result checkDone(@RequestParam("commentId") Long commentId,
@RequestParam("replyBody") String replyBody) {
if (commentId == null || commentId < 1 || StringUtils.isEmpty(replyBody)) {
}
if (commentService.reply(commentId, replyBody)) {
return ResultGenerator.genSuccessResult();
} else {
}
}
@PostMapping("/comments/delete")
@ResponseBody
public Result delete(@RequestBody Integer[] ids) {
if (ids.length < 1) {
}
if (commentService.deleteBatch(ids)) {
return ResultGenerator.genSuccessResult();
} else {
}
}
@GetMapping("/comments")
public String list(HttpServletRequest request) {
request.setAttribute("path", "comments");
return "admin/comment";
}
}
