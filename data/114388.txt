package com.oreilly.springdata.gemfire.core;
import java.math.BigDecimal;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import org.springframework.data.annotation.PersistenceConstructor;
import org.springframework.data.gemfire.mapping.Region;
import org.springframework.util.Assert;
@Region
public class Product extends AbstractPersistentEntity {
private String name, description;
private BigDecimal price;
private Map<String, String> attributes = new HashMap<String, String>();
public Product(Long id, String name, BigDecimal price) {
this(id, name, price, null);
}
@PersistenceConstructor
public Product(Long id, String name, BigDecimal price, String description) {
super(id);
Assert.hasText(name, "Name must not be null or empty!");
Assert.isTrue(BigDecimal.ZERO.compareTo(price) < 0, "Price must be greater than zero!");
this.name = name;
this.price = price;
this.description = description;
}
protected Product() {
}
public void setAttribute(String name, String value) {
Assert.hasText(name);
if (value == null) {
this.attributes.remove(value);
} else {
this.attributes.put(name, value);
}
}
public String getName() {
return name;
}
public String getDescription() {
return description;
}
public Map<String, String> getAttributes() {
return Collections.unmodifiableMap(attributes);
}
public BigDecimal getPrice() {
return price;
}
}
