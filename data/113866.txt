package psiprobe.controllers.apps;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.catalina.Context;
import org.springframework.web.bind.ServletRequestUtils;
import org.springframework.web.servlet.ModelAndView;
import psiprobe.beans.ResourceResolver;
import psiprobe.controllers.AbstractContextHandlerController;
import psiprobe.model.Application;
import psiprobe.model.stats.StatsCollection;
import psiprobe.tools.ApplicationUtils;
import psiprobe.tools.SecurityUtils;
public class BaseGetApplicationController extends AbstractContextHandlerController {
private boolean extendedInfo;
@Inject
private StatsCollection statsCollection;
private long collectionPeriod;
public boolean isExtendedInfo() {
return extendedInfo;
}
public void setExtendedInfo(boolean extendedInfo) {
this.extendedInfo = extendedInfo;
}
public StatsCollection getStatsCollection() {
return statsCollection;
}
public void setStatsCollection(StatsCollection statsCollection) {
this.statsCollection = statsCollection;
}
public long getCollectionPeriod() {
return collectionPeriod;
}
public void setCollectionPeriod(long collectionPeriod) {
this.collectionPeriod = collectionPeriod;
}
@Override
protected ModelAndView handleContext(String contextName, Context context,
HttpServletRequest request, HttpServletResponse response) throws Exception {
boolean calcSize = ServletRequestUtils.getBooleanParameter(request, "size", false)
&& SecurityUtils.hasAttributeValueRole(getServletContext(), request);
ResourceResolver resourceResolver = getContainerWrapper().getResourceResolver();
Application app = ApplicationUtils.getApplication(context,
isExtendedInfo() ? resourceResolver : null, calcSize, getContainerWrapper());
if (isExtendedInfo() && getStatsCollection() != null) {
String avgStatisticName = "app.avg_proc_time." + app.getName();
app.setAvgTime(getStatsCollection().getLastValueForStat(avgStatisticName));
}
return new ModelAndView(getViewName()).addObject("app", app)
.addObject("no_resources", !resourceResolver.supportsPrivateResources())
.addObject("collectionPeriod", getCollectionPeriod());
}
}
