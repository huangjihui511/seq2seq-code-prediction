package org.jupiter.common.util;
public final class Requires {
public static <T> T requireNotNull(T reference) {
if (reference == null) {
throw new NullPointerException();
}
return reference;
}
public static <T> T requireNotNull(T reference, Object errorMessage) {
if (reference == null) {
throw new NullPointerException(String.valueOf(errorMessage));
}
return reference;
}
public static void requireTrue(boolean expression) {
if (!expression) {
throw new IllegalArgumentException();
}
}
public static void requireTrue(boolean expression, Object errorMessage) {
if (!expression) {
throw new IllegalArgumentException(String.valueOf(errorMessage));
}
}
private Requires() {}
}
