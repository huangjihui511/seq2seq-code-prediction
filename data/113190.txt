package org.msgpack.core.buffer;
import static org.msgpack.core.Preconditions.checkNotNull;
public class ArrayBufferInput
implements MessageBufferInput
{
private MessageBuffer buffer;
private boolean isEmpty;
public ArrayBufferInput(MessageBuffer buf)
{
this.buffer = buf;
if (buf == null) {
isEmpty = true;
}
else {
isEmpty = false;
}
}
public ArrayBufferInput(byte[] arr)
{
this(arr, 0, arr.length);
}
public ArrayBufferInput(byte[] arr, int offset, int length)
{
this(MessageBuffer.wrap(checkNotNull(arr, "input array is null"), offset, length));
}
public MessageBuffer reset(MessageBuffer buf)
{
MessageBuffer old = this.buffer;
this.buffer = buf;
if (buf == null) {
isEmpty = true;
}
else {
isEmpty = false;
}
return old;
}
public void reset(byte[] arr)
{
reset(MessageBuffer.wrap(checkNotNull(arr, "input array is null")));
}
public void reset(byte[] arr, int offset, int len)
{
reset(MessageBuffer.wrap(checkNotNull(arr, "input array is null"), offset, len));
}
@Override
public MessageBuffer next()
{
if (isEmpty) {
return null;
}
isEmpty = true;
return buffer;
}
@Override
public void close()
{
buffer = null;
isEmpty = true;
}
}
