package io.realm.examples.arch.livemodel;
import android.arch.lifecycle.LiveData;
import android.support.annotation.MainThread;
import android.support.annotation.NonNull;
import io.realm.ObjectChangeSet;
import io.realm.RealmModel;
import io.realm.RealmObject;
import io.realm.RealmObjectChangeListener;
public class LiveRealmObject<T extends RealmModel> extends LiveData<T> {
private RealmObjectChangeListener<T> listener = new RealmObjectChangeListener<T>() {
@Override
public void onChange(@NonNull T object, ObjectChangeSet objectChangeSet) {
if (!objectChangeSet.isDeleted()) {
setValue(object);
} else {
setValue(null);
}
}
};
@MainThread
public LiveRealmObject(@NonNull T object) {
if (object == null) {
throw new IllegalArgumentException("The object cannot be null!");
}
if (!RealmObject.isManaged(object)) {
throw new IllegalArgumentException("LiveRealmObject only supports managed RealmModel instances!");
}
if (!RealmObject.isValid(object)) {
throw new IllegalArgumentException("The provided RealmObject is no longer valid, and therefore cannot be observed for changes.");
}
setValue(object);
}
@Override
protected void onActive() {
super.onActive();
T object = getValue();
if (object != null && RealmObject.isValid(object)) {
RealmObject.addChangeListener(object, listener);
}
}
@Override
protected void onInactive() {
super.onInactive();
T object = getValue();
if (object != null && RealmObject.isValid(object)) {
RealmObject.removeChangeListener(object, listener);
}
}
}
