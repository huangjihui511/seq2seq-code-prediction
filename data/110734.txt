package org.apache.zookeeper.server.jersey;
import java.util.Arrays;
import java.util.Collection;
import javax.ws.rs.core.MediaType;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;
import com.sun.jersey.api.client.ClientResponse;
@RunWith(Parameterized.class)
public class ExistsTest extends Base {
protected static final Logger LOG = LoggerFactory.getLogger(ExistsTest.class);
private String path;
private ClientResponse.Status expectedStatus;
@Parameters
public static Collection<Object[]> data() throws Exception {
String baseZnode = Base.createBaseZNode();
return Arrays.asList(new Object[][] {
{baseZnode, ClientResponse.Status.OK },
{baseZnode + "dkdk38383", ClientResponse.Status.NOT_FOUND }
});
}
public ExistsTest(String path, ClientResponse.Status status) {
this.path = path;
this.expectedStatus = status;
}
private void verify(String type) {
ClientResponse cr = znodesr.path(path).accept(type).type(type).head();
if (type.equals(MediaType.APPLICATION_OCTET_STREAM)
&& expectedStatus == ClientResponse.Status.OK) {
Assert.assertEquals(ClientResponse.Status.NO_CONTENT,
cr.getClientResponseStatus());
} else {
Assert.assertEquals(expectedStatus, cr.getClientResponseStatus());
}
}
@Test
public void testExists() throws Exception {
verify(MediaType.APPLICATION_OCTET_STREAM);
verify(MediaType.APPLICATION_JSON);
verify(MediaType.APPLICATION_XML);
}
}
