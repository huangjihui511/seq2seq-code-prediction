package org.ocpsoft.prettytime;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import java.util.Date;
import java.util.Locale;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.ocpsoft.prettytime.PrettyTime;
public class PrettyTimeI18n_FR_Test
{
private Locale locale;
@Before
public void setUp() throws Exception
{
locale = Locale.getDefault();
}
@Test
public void testPrettyTimeFRENCH()
{
PrettyTime p = new PrettyTime(Locale.FRENCH);
assertEquals("à l'instant", p.format(new Date()));
}
@Test
public void testPrettyTimeFRENCHCenturies()
{
PrettyTime p = new PrettyTime(new Date(3155692597470L * 3L), Locale.FRENCH);
assertEquals(p.format(new Date(0)), "il y a 3 siècles");
}
@Test
public void testPrettyTimeViaDefaultLocaleFRENCH()
{
Locale.setDefault(Locale.FRENCH);
PrettyTime p = new PrettyTime();
assertEquals(p.format(new Date()), "à l'instant");
}
@Test
public void testPrettyTimeFRENCHLocale()
{
long t = 1L;
PrettyTime p = new PrettyTime(new Date(0), Locale.FRENCH);
while (1000L * 60L * 60L * 24L * 365L * 1000000L > t)
{
assertTrue(p.format(new Date(0)).startsWith("dans") || p.format(new Date(0)).startsWith("à l'instant"));
t *= 2L;
}
}
@After
public void tearDown() throws Exception
{
Locale.setDefault(locale);
}
}
