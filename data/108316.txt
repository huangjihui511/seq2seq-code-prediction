package org.apache.flink.runtime.rest.util;
import org.apache.flink.api.java.tuple.Tuple2;
import org.apache.flink.runtime.rest.RestServerEndpoint;
import org.apache.flink.runtime.rest.handler.RestHandlerSpecification;
import org.apache.flink.runtime.rest.messages.MessageHeaders;
import org.apache.flink.shaded.netty4.io.netty.channel.ChannelInboundHandler;
import java.util.Comparator;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.stream.Collectors;
public interface DocumentingRestEndpoint {
List<Tuple2<RestHandlerSpecification, ChannelInboundHandler>> initializeHandlers(final CompletableFuture<String> localAddressFuture);
default List<MessageHeaders<?, ?, ?>> getSpecs() {
final Comparator<String> comparator = new RestServerEndpoint.RestHandlerUrlComparator.CaseInsensitiveOrderComparator();
return initializeHandlers(CompletableFuture.completedFuture(null)).stream()
.map(tuple -> tuple.f0)
.filter(spec -> spec instanceof MessageHeaders)
.map(spec -> (MessageHeaders<?, ?, ?>) spec)
.sorted((spec1, spec2) -> comparator.compare(spec1.getTargetRestEndpointURL(), spec2.getTargetRestEndpointURL()))
.collect(Collectors.toList());
}
}
