package io.github.bonigarcia.wdm.test;
import static io.github.bonigarcia.wdm.Architecture.X64;
import static java.lang.invoke.MethodHandles.lookup;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.collection.IsEmptyCollection.empty;
import static org.junit.Assert.assertThat;
import static org.slf4j.LoggerFactory.getLogger;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.URL;
import java.util.List;
import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import io.github.bonigarcia.wdm.Config;
import io.github.bonigarcia.wdm.HttpClient;
import io.github.bonigarcia.wdm.UrlFilter;
import io.github.bonigarcia.wdm.WebDriverManager;
public class PhantomJsFilterTest {
final Logger log = getLogger(lookup().lookupClass());
protected WebDriverManager phantomJsManager;
protected List<URL> driversUrls;
protected final String phantomJsBinaryName = "phantomjs";
@Before
@SuppressWarnings("unchecked")
public void setup() throws Exception {
phantomJsManager = WebDriverManager.phantomjs();
Field field = WebDriverManager.class.getDeclaredField("httpClient");
field.setAccessible(true);
field.set(phantomJsManager, new HttpClient(new Config()));
Method method = WebDriverManager.class.getDeclaredMethod("getDrivers");
method.setAccessible(true);
driversUrls = (List<URL>) method.invoke(phantomJsManager);
}
@Test
@SuppressWarnings("unchecked")
public void testFilterPhantomJs() throws NoSuchMethodException,
SecurityException, IllegalAccessException, IllegalArgumentException,
InvocationTargetException {
Method method = WebDriverManager.class.getDeclaredMethod("checkLatest",
List.class, String.class);
method.setAccessible(true);
List<URL> latestUrls = (List<URL>) method.invoke(phantomJsManager,
driversUrls, phantomJsBinaryName);
List<URL> filteredLatestUrls = new UrlFilter().filterByArch(latestUrls,
X64, false);
log.info("Filtered URLS for LATEST version {} : {}",
phantomJsBinaryName, filteredLatestUrls);
assertThat(filteredLatestUrls, not(empty()));
}
@Test
@SuppressWarnings("unchecked")
public void testFilterVersionPhantomJs() throws NoSuchMethodException,
SecurityException, IllegalAccessException, IllegalArgumentException,
InvocationTargetException {
String specificVersion = "1.9.6";
Method method = WebDriverManager.class.getDeclaredMethod("getVersion",
List.class, String.class, String.class);
method.setAccessible(true);
List<URL> specificVersionUrls = (List<URL>) method.invoke(
phantomJsManager, driversUrls, phantomJsBinaryName,
specificVersion);
List<URL> filteredVersionUrls = new UrlFilter()
.filterByArch(specificVersionUrls, X64, false);
log.info("Filtered URLS for {} version {}: {}", phantomJsBinaryName,
specificVersion, filteredVersionUrls);
assertThat(filteredVersionUrls, not(empty()));
}
}
