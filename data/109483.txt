package com.facebook.presto.operator.aggregation;
import com.facebook.presto.spi.block.Block;
import com.facebook.presto.spi.block.BlockBuilder;
import com.facebook.presto.spi.type.StandardTypes;
import com.google.common.collect.ImmutableList;
import java.util.List;
import static com.facebook.presto.spi.type.DoubleType.DOUBLE;
public class TestDoubleGeometricMeanAggregation
extends AbstractTestAggregationFunction
{
@Override
public Block[] getSequenceBlocks(int start, int length)
{
BlockBuilder blockBuilder = DOUBLE.createBlockBuilder(null, length);
for (int i = start; i < start + length; i++) {
DOUBLE.writeDouble(blockBuilder, (double) i);
}
return new Block[] {blockBuilder.build()};
}
@Override
public Number getExpectedValue(int start, int length)
{
if (length == 0) {
return null;
}
double product = 1.0d;
for (int i = start; i < start + length; i++) {
product *= i;
}
return Math.pow(product, 1.0d / length);
}
@Override
protected String getFunctionName()
{
return "geometric_mean";
}
@Override
protected List<String> getFunctionParameterTypes()
{
return ImmutableList.of(StandardTypes.DOUBLE);
}
}
