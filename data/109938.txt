package us.codecraft.webmagic;
import org.junit.Ignore;
import org.junit.Test;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Selectable;
import static org.assertj.core.api.Assertions.assertThat;
public class HtmlTest {
@Test
public void testRegexSelector() {
Html selectable = new Html("aaaaaaab");
assertThat(selectable.regex("(a+b)").replace("aa(a)", "$1bb").toString()).isEqualTo("abbabbab");
}
@Ignore("not work in jsoup 1.8.x")
@Test
public void testDisableJsoupHtmlEntityEscape() throws Exception {
Html.DISABLE_HTML_ENTITY_ESCAPE = true;
Html html = new Html("aaaaaaa&b");
assertThat(html.regex("(aaaaaaa&b)").toString()).isEqualTo("aaaaaaa&b");
}
@Test
public void testEnableJsoupHtmlEntityEscape() throws Exception {
Html html = new Html("aaaaaaa&b");
assertThat(html.regex("(aaaaaaa&amp;b)").toString()).isEqualTo("aaaaaaa&amp;b");
}
@Test
public void testAHrefExtract(){
Html html = new Html("<a data-tip=\"p$t$xxx\" href=\"/xx/xx\">xx</a>");
assertThat(html.links().all()).contains("/xx/xx");
}
@Test
public void testNthNodesGet(){
Html html = new Html("<a data-tip=\"p$t$xxx\" href=\"/xx/xx\">xx</a>");
assertThat(html.xpath("
Selectable selectable = html.xpath("
assertThat(selectable.xpath("/a/@href").get()).isEqualTo("/xx/xx");
}
@Test
public void testGetHrefsByJsoup(){
Html html = new Html("<html><a href='issues'>issues</a><img src='webmagic.jpg'/></html>","https:
assertThat(html.xpath("
assertThat(html.xpath("
html = new Html("<html><base href='https:
assertThat(html.xpath("
assertThat(html.xpath("
}
}
