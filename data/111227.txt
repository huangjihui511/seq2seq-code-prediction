package com.github.benmanes.caffeine.cache;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.checkerframework.checker.nullness.qual.Nullable;
public interface CacheWriter<K, V> {
void write(@NonNull K key, @NonNull V value);
void delete(@NonNull K key, @Nullable V value, @NonNull RemovalCause cause);
static @NonNull <K, V> CacheWriter<K, V> disabledWriter() {
@SuppressWarnings("unchecked")
CacheWriter<K, V> writer = (CacheWriter<K, V>) DisabledWriter.INSTANCE;
return writer;
}
}
enum DisabledWriter implements CacheWriter<Object, Object> {
INSTANCE;
@Override
public void write(Object key, Object value) {}
@Override
public void delete(Object key, @Nullable Object value, RemovalCause cause) {}
}
