package org.apereo.cas.authentication.mfa;
import org.apereo.cas.authentication.AbstractMultifactorAuthenticationProvider;
import org.apereo.cas.authentication.MultifactorAuthenticationProvider;
import org.apereo.cas.services.RegisteredService;
import org.apereo.cas.util.spring.ApplicationContextProvider;
import org.springframework.context.ConfigurableApplicationContext;
public class TestUnavailableMultifactorAuthenticationProvider extends AbstractMultifactorAuthenticationProvider {
public static final String ID = "mfa-dummy-unavailable";
private static final long serialVersionUID = -9184556172646207560L;
public static MultifactorAuthenticationProvider registerProviderIntoApplicationContext(final ConfigurableApplicationContext applicationContext) {
return ApplicationContextProvider.registerBeanIntoApplicationContext(applicationContext,
TestUnavailableMultifactorAuthenticationProvider.class, "unavailable-provider" + System.currentTimeMillis());
}
@Override
public String getFriendlyName() {
return getClass().getSimpleName();
}
@Override
public String getId(){
return ID;
}
@Override
public boolean isAvailable(final RegisteredService service) {
return false;
}
}
