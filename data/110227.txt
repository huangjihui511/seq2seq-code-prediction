package tests;
import javax.annotation.processing.Generated;
import javax.inject.Inject;
import javax.inject.Provider;
@Generated(
value = "com.google.auto.factory.processor.AutoFactoryProcessor",
comments = "https:
)
final class ProviderArgumentToCreateMethodFactory
implements ProviderArgumentToCreateMethod.CustomCreator{
@Inject ProviderArgumentToCreateMethodFactory() {}
ProviderArgumentToCreateMethod create(Provider<String> stringProvider) {
return new ProviderArgumentToCreateMethod(checkNotNull(stringProvider, 1));
}
@Override
public ProviderArgumentToCreateMethod newInstance(Provider<String> stringProvider) {
return create(stringProvider);
}
private static <T> T checkNotNull(T reference, int argumentIndex) {
if (reference == null) {
throw new NullPointerException(
"@AutoFactory method argument is null but is not marked @Nullable. Argument index: "
+ argumentIndex);
}
return reference;
}
}
