package com.example.appengine;
import com.example.time.Clock;
import com.google.appengine.api.datastore.DatastoreService;
import com.google.appengine.api.datastore.Entity;
import com.google.appengine.api.datastore.FetchOptions;
import com.google.appengine.api.datastore.Key;
import com.google.appengine.api.datastore.KeyFactory;
import com.google.appengine.api.datastore.Query;
import com.google.appengine.api.users.User;
import java.util.Date;
import java.util.List;
class GuestbookStrong extends AbstractGuestbook {
private final String guestbookName;
GuestbookStrong(String guestbookName, Clock clock) {
super(clock);
this.guestbookName = guestbookName;
}
@Override
protected Entity createGreeting(
DatastoreService datastore, User user, Date date, String content) {
Key guestbookKey = KeyFactory.createKey("Guestbook", guestbookName);
Entity greeting = new Entity("Greeting", guestbookKey);
greeting.setProperty("user", user);
greeting.setProperty("date", date);
greeting.setProperty("content", content);
datastore.put(greeting);
return greeting;
}
@Override
protected List<Entity> listGreetingEntities(DatastoreService datastore) {
Key guestbookKey = KeyFactory.createKey("Guestbook", guestbookName);
Query query =
new Query("Greeting", guestbookKey)
.setAncestor(guestbookKey)
.addSort("date", Query.SortDirection.DESCENDING);
return datastore.prepare(query).asList(FetchOptions.Builder.withLimit(10));
}
}
