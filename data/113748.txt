package net.pms.io;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
public class OutputBufferConsumer extends OutputConsumer {
private static final Logger LOGGER = LoggerFactory.getLogger(OutputBufferConsumer.class);
private BufferedOutputFile outputBuffer;
private static final int PIPE_BUFFER_SIZE = 500000;
public OutputBufferConsumer(InputStream inputStream, OutputParams params) {
super(inputStream);
outputBuffer = new BufferedOutputFileImpl(params);
}
@Override
public void run() {
try {
byte buf[] = new byte[PIPE_BUFFER_SIZE];
int n = 0;
while ((n = inputStream.read(buf)) > 0) {
outputBuffer.write(buf, 0, n);
}
} catch (IOException ioe) {
LOGGER.debug("Error consuming stream of spawned process: " + ioe.getMessage());
} finally {
if (inputStream != null) {
try {
inputStream.close();
} catch (IOException e) {
LOGGER.debug("Caught exception", e);
}
}
}
}
@Override
public BufferedOutputFile getBuffer() {
return outputBuffer;
}
@Override
public List<String> getResults() {
return null;
}
}
