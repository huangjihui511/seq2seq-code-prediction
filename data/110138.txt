package spark;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;
import spark.examples.gzip.GzipClient;
import spark.examples.gzip.GzipExample;
import spark.util.SparkTestUtil;
import static org.junit.Assert.assertEquals;
import static spark.Spark.awaitInitialization;
import static spark.Spark.stop;
public class GzipTest {
@BeforeClass
public static void setup() {
GzipExample.addStaticFileLocation();
GzipExample.addRoutes();
awaitInitialization();
}
@AfterClass
public static void tearDown() {
stop();
}
@Test
public void checkGzipCompression() throws Exception {
String decompressed = GzipExample.getAndDecompress();
assertEquals(GzipExample.CONTENT, decompressed);
}
@Test
public void testStaticFileCssStyleCss() throws Exception {
String decompressed = GzipClient.getAndDecompress("http:
Assert.assertEquals("Content of css file", decompressed);
testGet();
}
private static void testGet() throws Exception {
SparkTestUtil testUtil = new SparkTestUtil(4567);
SparkTestUtil.UrlResponse response = testUtil.doMethod("GET", "/hello", "");
Assert.assertEquals(200, response.status);
Assert.assertTrue(response.body.contains(GzipExample.FO_SHIZZY));
}
}
