package com.facebook.presto.operator.aggregation;
import com.facebook.presto.spi.block.Block;
import com.facebook.presto.spi.block.BlockBuilder;
import com.facebook.presto.spi.type.ArrayType;
import com.google.common.collect.ImmutableList;
import java.util.List;
import static com.facebook.presto.spi.type.BigintType.BIGINT;
import static com.facebook.presto.util.StructuralTestUtil.arrayBlockOf;
public class TestArrayMinAggregation
extends AbstractTestAggregationFunction
{
@Override
public Block[] getSequenceBlocks(int start, int length)
{
ArrayType arrayType = new ArrayType(BIGINT);
BlockBuilder blockBuilder = arrayType.createBlockBuilder(null, length);
for (int i = start; i < start + length; i++) {
arrayType.writeObject(blockBuilder, arrayBlockOf(BIGINT, i));
}
return new Block[] {blockBuilder.build()};
}
@Override
public List<Long> getExpectedValue(int start, int length)
{
if (length == 0) {
return null;
}
return ImmutableList.of((long) start);
}
@Override
protected String getFunctionName()
{
return "min";
}
@Override
protected List<String> getFunctionParameterTypes()
{
return ImmutableList.of("array(bigint)");
}
}
