package com.datumbox.framework.common.dataobjects;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
public class DataTable2D extends AssociativeArray2D {
private static final long serialVersionUID = 1L;
public DataTable2D() {
super();
}
public DataTable2D(Map<Object, AssociativeArray> internalData) {
super(internalData);
}
public boolean isValid() {
int totalNumberOfColumns = 0;
Set<Object> columns = new HashSet<>();
for(Map.Entry<Object, AssociativeArray> entry : internalData.entrySet()) {
AssociativeArray row = entry.getValue();
if(columns.isEmpty()) {
for(Object column : row.internalData.keySet()) {
columns.add(column);
}
totalNumberOfColumns = columns.size();
}
else {
if(totalNumberOfColumns!=row.size()) {
return false; 
}
for(Object column : columns) {
if(row.containsKey(column)==false) {
return false; 
}
}
}
}
return true;
}
@Override
public DataTable2D copy() {
return (DataTable2D) super.copy();
}
@Override
public boolean equals(Object o) {
if ( this == o ) return true;
if ( !(o instanceof DataTable2D) ) return false;
return internalData.equals(((DataTable2D)o).internalData);
}
@Override
public int hashCode() {
return internalData.hashCode();
}
}
