package com.google.api.client.http.json;
import com.google.api.client.http.AbstractHttpContent;
import com.google.api.client.http.HttpMediaType;
import com.google.api.client.json.Json;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.JsonGenerator;
import com.google.api.client.util.Preconditions;
import java.io.IOException;
import java.io.OutputStream;
public class JsonHttpContent extends AbstractHttpContent {
private final Object data;
private final JsonFactory jsonFactory;
private String wrapperKey;
public JsonHttpContent(JsonFactory jsonFactory, Object data) {
super(Json.MEDIA_TYPE);
this.jsonFactory = Preconditions.checkNotNull(jsonFactory);
this.data = Preconditions.checkNotNull(data);
}
public void writeTo(OutputStream out) throws IOException {
JsonGenerator generator = jsonFactory.createJsonGenerator(out, getCharset());
if (wrapperKey != null) {
generator.writeStartObject();
generator.writeFieldName(wrapperKey);
}
generator.serialize(data);
if (wrapperKey != null) {
generator.writeEndObject();
}
generator.flush();
}
@Override
public JsonHttpContent setMediaType(HttpMediaType mediaType) {
super.setMediaType(mediaType);
return this;
}
public final Object getData() {
return data;
}
public final JsonFactory getJsonFactory() {
return jsonFactory;
}
public final String getWrapperKey() {
return wrapperKey;
}
public JsonHttpContent setWrapperKey(String wrapperKey) {
this.wrapperKey = wrapperKey;
return this;
}
}
