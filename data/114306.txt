package mobi.hsz.idea.gitignore;
import com.intellij.openapi.module.Module;
import com.intellij.openapi.project.ModuleListener;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.roots.ModuleRootEvent;
import com.intellij.openapi.roots.ModuleRootListener;
import com.intellij.util.Function;
import org.jetbrains.annotations.NotNull;
import java.util.List;
public class CommonRunnableListeners implements
IgnoreManager.RefreshStatusesListener, ModuleRootListener, ModuleListener {
@NotNull
private final Runnable task;
public CommonRunnableListeners(@NotNull Runnable task) {
this.task = task;
}
@Override
public void refresh() {
task.run();
}
@Override
public void beforeRootsChange(@NotNull ModuleRootEvent event) {
}
@Override
public void rootsChanged(@NotNull ModuleRootEvent event) {
task.run();
}
@Override
public void moduleAdded(@NotNull Project project, @NotNull Module module) {
task.run();
}
@Override
public void beforeModuleRemoved(@NotNull Project project, @NotNull Module module) {
}
@Override
public void moduleRemoved(@NotNull Project project, @NotNull Module module) {
task.run();
}
@Override
public void modulesRenamed(@NotNull Project project, @NotNull List<Module> modules,
@NotNull Function<Module, String> oldNameProvider) {
task.run();
}
}
