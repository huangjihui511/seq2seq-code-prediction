package io.hawt.web.kubernetes;
import javax.servlet.http.HttpServletRequest;
import io.hawt.util.Strings;
import io.hawt.web.proxy.ProxyAddress;
import io.hawt.web.proxy.ProxyServlet;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
public class ServiceServlet extends ProxyServlet {
private static final transient Logger LOG = LoggerFactory.getLogger(ServiceServlet.class);
@Override
protected ProxyAddress parseProxyAddress(HttpServletRequest servletRequest) {
String reqQueryString = servletRequest.getQueryString();
String queryPostfix = "";
if (Strings.isNotBlank(reqQueryString)) {
queryPostfix = "?" + reqQueryString;
}
String userName = null;
String password = null;
String serviceName = servletRequest.getPathInfo();
if (serviceName == null) {
serviceName = "";
}
if (serviceName.startsWith("/")) {
serviceName = serviceName.substring(1);
}
int idx = serviceName.indexOf('/');
String servicePath = "/";
if (idx > 0) {
servicePath = serviceName.substring(idx);
serviceName = serviceName.substring(0, idx);
}
if (serviceName.length() == 0) {
serviceName = "kubernetes";
servicePath = "/kubernetes/api/v1beta2/services";
}
String url = ServiceResolver.getSingleton().getServiceURL(serviceName);
if (url == null) {
if (LOG.isDebugEnabled()) {
LOG.debug("No service for: " + serviceName + " path: " + servicePath);
}
return null;
} else {
url += servicePath + queryPostfix;
if (LOG.isDebugEnabled()) {
LOG.debug("Invoking: " + url + " from service: " + serviceName + " path: " + servicePath);
}
return new DefaultProxyAddress(url, userName, password);
}
}
}
