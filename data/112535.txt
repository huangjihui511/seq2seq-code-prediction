package com.sun.swingset3.codeview;
import java.text.CharacterIterator;
import java.util.*;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Segment;
public class SnippetParser {
private final static String START_MARKER = "<snip>";
private final static String END_MARKER = "</snip>";
protected SnippetParser() {
}
public static HashMap<String,List<Snippet>> parse(Document document) {
return parse(document, START_MARKER, END_MARKER);
}
private static HashMap<String,List<Snippet>> parse(Document document,
String startMarker, String endMarker) {
HashMap<String,List<Snippet>> snippetMap = new HashMap<String,List<Snippet>>();
Stack<Snippet> stack = new Stack<Snippet>(); 
char startMarkerChars[] = startMarker.toCharArray();
char endMarkerChars[] = endMarker.toCharArray();
int nleft = document.getLength();
Segment segment = new Segment();
int offset = 0;
int lineStart = 0;
int charCount = 0;
int startMarkerIndex = 0;
int endMarkerIndex = 0;
StringBuffer keyBuf = new StringBuffer();
segment.setPartialReturn(true);
try {
while (nleft > 0) {
document.getText(offset, nleft, segment);
for(char c = segment.first(); c != CharacterIterator.DONE;
c = segment.next()) {
if (!stack.isEmpty()) {
if (c == endMarkerChars[endMarkerIndex]) {
endMarkerIndex++;
if (endMarkerIndex == endMarkerChars.length) {
Snippet snippet = stack.pop();
if (snippet.key.equals("tempkey")) {
snippet.key = keyBuf.toString().trim();
}
snippet.endLine = charCount + 1;
List<Snippet> snippetList = snippetMap.get(snippet.key);
if (snippetList == null) {
snippetList = new ArrayList<Snippet>();
snippetMap.put(snippet.key, snippetList);
}
snippetList.add(snippet);
endMarkerIndex = 0;
}
} else {
endMarkerIndex = 0;
if (stack.peek().startLine == lineStart){
keyBuf.append(c);
}
}
}
if (c == startMarkerChars[startMarkerIndex]) {
startMarkerIndex++;
if (startMarkerIndex == startMarkerChars.length) {
if (!stack.isEmpty()) {
Snippet snippet = stack.peek();
snippet.key = keyBuf.toString().trim();
}
stack.push(new Snippet(document, "tempkey", lineStart));
keyBuf.setLength(0);
startMarkerIndex = 0;
}
} else {
startMarkerIndex = 0;
}
charCount++;
if (c == '\n') {
lineStart = charCount;
}
}
nleft -= segment.count;
offset += segment.count;
}
} catch (BadLocationException e) {
System.err.println(e);
}
return snippetMap;
}
}
