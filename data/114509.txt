package org.dstadler.jgit.porcelain;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import org.apache.commons.io.FileUtils;
import org.dstadler.jgit.helper.CookbookHelper;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.archive.ArchiveFormats;
import org.eclipse.jgit.lib.Repository;
public class CreateArchive {
public static void main(String[] args) throws IOException, GitAPIException {
try (Repository repository = CookbookHelper.openJGitCookbookRepository()) {
ArchiveFormats.registerAll();
try {
write(repository, ".zip", "zip");
write(repository, ".tar.gz", "tgz");
write(repository, ".tar.bz2", "tbz2");
write(repository, ".tar.xz", "txz");
} finally {
ArchiveFormats.unregisterAll();
}
}
}
private static void write(Repository repository, String suffix, String format) throws IOException, GitAPIException {
File file = File.createTempFile("test", suffix);
try (OutputStream out = new FileOutputStream(file)) {
try (Git git = new Git(repository)) {
git.archive()
.setTree(repository.resolve("master"))
.setFormat(format)
.setOutputStream(out)
.call();
}
}
System.out.println("Wrote " + file.length() + " bytes to " + file);
FileUtils.forceDelete(file);
}
}
