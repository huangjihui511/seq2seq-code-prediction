package io.jooby;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.Objects;
public final class ServiceKey<T> {
private final Class<T> type;
private final int hashCode;
private final String name;
private ServiceKey(Class<T> type, String name) {
this.type = type;
this.name = name;
this.hashCode = Objects.hash(type, name);
}
public @Nonnull Class<T> getType() {
return type;
}
public @Nullable String getName() {
return name;
}
@Override public boolean equals(Object obj) {
if (obj instanceof ServiceKey) {
ServiceKey that = (ServiceKey) obj;
return this.type == that.type && Objects.equals(this.name, that.name);
}
return false;
}
@Override public int hashCode() {
return hashCode;
}
@Override public String toString() {
if (name == null) {
return type.getName();
}
return type.getName() + "(" + name + ")";
}
public static @Nonnull  <T> ServiceKey<T> key(@Nonnull Class<T> type) {
return new ServiceKey<>(type, null);
}
public static @Nonnull  <T> ServiceKey<T> key(@Nonnull Class<T> type, @Nonnull String name) {
return new ServiceKey<>(type, name);
}
}
