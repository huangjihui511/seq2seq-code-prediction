package com.datumbox.framework.common.storage.interfaces;
import java.io.Serializable;
import java.util.Map;
import java.util.NoSuchElementException;
public interface StorageEngine extends AutoCloseable {
public enum MapType {
HASHMAP,
TREEMAP;
}
public enum StorageHint {
IN_MEMORY,
IN_CACHE,
IN_DISK;
}
public boolean rename(String newStorageName);
public boolean isClosed();
public void clear();
public boolean existsObject(String name);
public <T extends Serializable> void saveObject(String name, T serializableObject) throws NoSuchElementException;
public <T extends Serializable> T loadObject(String name, Class<T> klass);
public <K,V> Map<K,V> getBigMap(String name, Class<K> keyClass, Class<V> valueClass, MapType type, StorageHint storageHint, boolean isConcurrent, boolean isTemporary);
public <T extends Map> void dropBigMap(String name, T map);
public String getStorageName();
}
