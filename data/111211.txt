package com.github.benmanes.caffeine.cache.impl;
import org.cache2k.Cache;
import org.cache2k.Cache2kBuilder;
import com.github.benmanes.caffeine.cache.BasicCache;
public final class Cache2k<K, V> implements BasicCache<K, V> {
private final Cache<K, V> cache;
@SuppressWarnings("unchecked")
public Cache2k(int maximumSize) {
cache = (Cache<K, V>) Cache2kBuilder.forUnknownTypes()
.entryCapacity(maximumSize)
.eternal(true)
.build();
}
@Override
public V get(K key) {
return cache.peek(key);
}
@Override
public void put(K key, V value) {
cache.put(key, value);
}
@Override
public void clear() {
cache.clear();
}
}
