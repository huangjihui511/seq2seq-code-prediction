package com.google.samples;
import com.google.api.services.jobs.v3.CloudTalentSolution;
import com.google.api.services.jobs.v3.model.Company;
import com.google.api.services.jobs.v3.model.CustomAttributeHistogramRequest;
import com.google.api.services.jobs.v3.model.HistogramFacets;
import com.google.api.services.jobs.v3.model.Job;
import com.google.api.services.jobs.v3.model.JobQuery;
import com.google.api.services.jobs.v3.model.RequestMetadata;
import com.google.api.services.jobs.v3.model.SearchJobsRequest;
import com.google.api.services.jobs.v3.model.SearchJobsResponse;
import java.io.IOException;
import java.util.Arrays;
public final class HistogramSample {
private static final String DEFAULT_PROJECT_ID =
"projects/" + System.getenv("GOOGLE_CLOUD_PROJECT");
private static CloudTalentSolution talentSolutionClient = JobServiceQuickstart
.getTalentSolutionClient();
public static void histogramSearch(String companyName) throws IOException {
RequestMetadata requestMetadata =
new RequestMetadata()
.setUserId("HashedUserId")
.setSessionId("HashedSessionID")
.setDomain(
"www.google.com");
HistogramFacets histogramFacets =
new HistogramFacets()
.setSimpleHistogramFacets(Arrays.asList("COMPANY_ID"))
.setCustomAttributeHistogramFacets(
Arrays.asList(
new CustomAttributeHistogramRequest()
.setKey("someFieldName1")
.setStringValueHistogram(true)));
SearchJobsRequest searchJobsRequest =
new SearchJobsRequest()
.setRequestMetadata(requestMetadata)
.setSearchMode("JOB_SEARCH")
.setHistogramFacets(histogramFacets);
if (companyName != null) {
searchJobsRequest.setJobQuery(new JobQuery().setCompanyNames(Arrays.asList(companyName)));
}
SearchJobsResponse searchJobsResponse =
talentSolutionClient
.projects()
.jobs()
.search(DEFAULT_PROJECT_ID, searchJobsRequest)
.execute();
System.out.println(searchJobsResponse);
}
public static void main(String... args) throws Exception {
Company companyToBeCreated = BasicCompanySample.generateCompany();
String companyName = BasicCompanySample.createCompany(companyToBeCreated).getName();
Job jobToBeCreated = CustomAttributeSample.generateJobWithACustomAttribute(companyName);
String jobName = BasicJobSample.createJob(jobToBeCreated).getName();
Thread.sleep(10000);
histogramSearch(companyName);
BasicJobSample.deleteJob(jobName);
BasicCompanySample.deleteCompany(companyName);
}
}
