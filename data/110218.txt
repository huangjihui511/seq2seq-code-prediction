package tests;
import javax.annotation.processing.Generated;
import javax.inject.Inject;
import javax.inject.Provider;
@Generated(
value = "com.google.auto.factory.processor.AutoFactoryProcessor",
comments = "https:
)
final class FactoryImplementingGenericInterfaceExtensionFactory
implements FactoryImplementingGenericInterfaceExtension.MyFactory {
private final Provider<String> sProvider;
@Inject
FactoryImplementingGenericInterfaceExtensionFactory(Provider<String> sProvider) {
this.sProvider = checkNotNull(sProvider, 1);
}
FactoryImplementingGenericInterfaceExtension create(Integer i) {
return new FactoryImplementingGenericInterfaceExtension(
checkNotNull(sProvider.get(), 1), checkNotNull(i, 2));
}
@Override
public FactoryImplementingGenericInterfaceExtension make(Integer arg) {
return create(arg);
}
private static <T> T checkNotNull(T reference, int argumentIndex) {
if (reference == null) {
throw new NullPointerException(
"@AutoFactory method argument is null but is not marked @Nullable. Argument index: "
+ argumentIndex);
}
return reference;
}
}
