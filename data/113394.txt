package com.site.blog.my.core.controller.admin;
import com.site.blog.my.core.service.TagService;
import com.site.blog.my.core.util.PageQueryUtil;
import com.site.blog.my.core.util.Result;
import com.site.blog.my.core.util.ResultGenerator;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.Map;
@Controller
@RequestMapping("/admin")
public class TagController {
@Resource
private TagService tagService;
@GetMapping("/tags")
public String tagPage(HttpServletRequest request) {
request.setAttribute("path", "tags");
return "admin/tag";
}
@GetMapping("/tags/list")
@ResponseBody
public Result list(@RequestParam Map<String, Object> params) {
if (StringUtils.isEmpty(params.get("page")) || StringUtils.isEmpty(params.get("limit"))) {
}
PageQueryUtil pageUtil = new PageQueryUtil(params);
return ResultGenerator.genSuccessResult(tagService.getBlogTagPage(pageUtil));
}
@PostMapping("/tags/save")
@ResponseBody
public Result save(@RequestParam("tagName") String tagName) {
if (StringUtils.isEmpty(tagName)) {
}
if (tagService.saveTag(tagName)) {
return ResultGenerator.genSuccessResult();
} else {
}
}
@PostMapping("/tags/delete")
@ResponseBody
public Result delete(@RequestBody Integer[] ids) {
if (ids.length < 1) {
}
if (tagService.deleteBatch(ids)) {
return ResultGenerator.genSuccessResult();
} else {
}
}
}
