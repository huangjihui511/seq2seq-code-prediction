package com.xkcoding.rbac.security.controller;
import cn.hutool.core.collection.CollUtil;
import com.xkcoding.rbac.security.common.ApiResponse;
import com.xkcoding.rbac.security.common.PageResult;
import com.xkcoding.rbac.security.common.Status;
import com.xkcoding.rbac.security.exception.SecurityException;
import com.xkcoding.rbac.security.payload.PageCondition;
import com.xkcoding.rbac.security.service.MonitorService;
import com.xkcoding.rbac.security.util.PageUtil;
import com.xkcoding.rbac.security.util.SecurityUtil;
import com.xkcoding.rbac.security.vo.OnlineUser;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
@Slf4j
@RestController
@RequestMapping("/api/monitor")
public class MonitorController {
@Autowired
private MonitorService monitorService;
@GetMapping("/online/user")
public ApiResponse onlineUser(PageCondition pageCondition) {
PageUtil.checkPageCondition(pageCondition, PageCondition.class);
PageResult<OnlineUser> pageResult = monitorService.onlineUser(pageCondition);
return ApiResponse.ofSuccess(pageResult);
}
@DeleteMapping("/online/user/kickout")
public ApiResponse kickoutOnlineUser(@RequestBody List<String> names) {
if (CollUtil.isEmpty(names)) {
throw new SecurityException(Status.PARAM_NOT_NULL);
}
if (names.contains(SecurityUtil.getCurrentUsername())){
throw new SecurityException(Status.KICKOUT_SELF);
}
monitorService.kickout(names);
return ApiResponse.ofSuccess();
}
}
