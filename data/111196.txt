package com.github.benmanes.caffeine.cache.local;
import java.util.Set;
import javax.lang.model.element.Modifier;
import com.github.benmanes.caffeine.cache.Feature;
import com.squareup.javapoet.MethodSpec;
import com.squareup.javapoet.TypeName;
import com.squareup.javapoet.TypeSpec;
public final class LocalCacheContext {
public final boolean isFinal;
public final String className;
public final TypeName superClass;
public final TypeSpec.Builder cache;
public final Set<Feature> parentFeatures;
public final Set<Feature> generateFeatures;
public final MethodSpec.Builder constructor;
public LocalCacheContext(TypeName superClass, String className, boolean isFinal,
Set<Feature> parentFeatures, Set<Feature> generateFeatures) {
this.isFinal = isFinal;
this.className = className;
this.superClass = superClass;
this.parentFeatures = parentFeatures;
this.generateFeatures = generateFeatures;
this.cache = TypeSpec.classBuilder(className);
this.constructor = MethodSpec.constructorBuilder();
}
public Modifier[] publicFinalModifiers() {
return isFinal
? new Modifier[] { Modifier.PUBLIC }
: new Modifier[] { Modifier.PUBLIC, Modifier.FINAL };
}
public Modifier[] protectedFinalModifiers() {
return isFinal
? new Modifier[] { Modifier.PROTECTED }
: new Modifier[] { Modifier.PROTECTED, Modifier.FINAL };
}
}
