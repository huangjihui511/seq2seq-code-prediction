package io.github.bonigarcia.wdm.test;
import static io.github.bonigarcia.wdm.WebDriverManager.chromedriver;
import static io.github.bonigarcia.wdm.WebDriverManager.edgedriver;
import static io.github.bonigarcia.wdm.WebDriverManager.firefoxdriver;
import static io.github.bonigarcia.wdm.WebDriverManager.iedriver;
import static io.github.bonigarcia.wdm.WebDriverManager.operadriver;
import static io.github.bonigarcia.wdm.WebDriverManager.phantomjs;
import static java.lang.invoke.MethodHandles.lookup;
import static java.util.Arrays.asList;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.collection.IsEmptyCollection.empty;
import static org.junit.Assert.assertThat;
import static org.slf4j.LoggerFactory.getLogger;
import java.util.Collection;
import java.util.List;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;
import org.slf4j.Logger;
import io.github.bonigarcia.wdm.WebDriverManager;
@RunWith(Parameterized.class)
public class VersionsTest {
final Logger log = getLogger(lookup().lookupClass());
@Parameter
public WebDriverManager driverManager;
@Parameters(name = "{index}: {0}")
public static Collection<Object[]> data() {
return asList(new Object[][] {
{ chromedriver() }, { firefoxdriver() },
{ operadriver() }, { edgedriver() }, { iedriver() },
{ phantomjs() } });
}
@Test
public void testChromeDriverVersions() {
List<String> versions = driverManager.getVersions();
log.debug("Versions of {} {}", driverManager.getClass().getSimpleName(),
versions);
assertThat(versions, notNullValue());
assertThat(versions, not(empty()));
}
}
