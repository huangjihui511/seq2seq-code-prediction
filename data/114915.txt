package it.unimi.dsi.fastutil;
import java.util.Comparator;
import java.util.NoSuchElementException;
public interface IndirectPriorityQueue<K> {
void enqueue(int index);
int dequeue();
default boolean isEmpty() { return size() == 0; }
int size();
void clear();
int first();
default int last() { throw new UnsupportedOperationException(); }
default void changed() {
changed(first());
}
Comparator <? super K> comparator();
default void changed(int index) { throw new UnsupportedOperationException(); }
default void allChanged() { throw new UnsupportedOperationException(); }
default boolean contains(int index) { throw new UnsupportedOperationException(); }
default boolean remove(int index) { throw new UnsupportedOperationException(); }
default int front(final int[] a) { throw new UnsupportedOperationException(); }
}
