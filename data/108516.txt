package org.deeplearning4j.util;
import org.deeplearning4j.BaseDL4JTest;
import org.deeplearning4j.text.movingwindow.ContextLabelRetriever;
import org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory;
import org.deeplearning4j.text.tokenization.tokenizerfactory.UimaTokenizerFactory;
import org.junit.Before;
import org.junit.Test;
import org.nd4j.linalg.primitives.Pair;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.ArrayList;
import java.util.List;
import static org.junit.Assert.assertEquals;
public class ContextLabelTest extends BaseDL4JTest {
private static final Logger log = LoggerFactory.getLogger(ContextLabelTest.class);
private TokenizerFactory tokenizerFactory;
@Before
public void init() throws Exception {
if (tokenizerFactory == null) {
tokenizerFactory = new UimaTokenizerFactory(false);
}
}
@Test
public void testBasicLabel() {
String labeledSentence = "<NEGATIVE> This sucks really bad </NEGATIVE> .";
Pair<String, org.nd4j.linalg.collection.MultiDimensionalMap<Integer, Integer, String>> ret =
ContextLabelRetriever.stringWithLabels(labeledSentence, tokenizerFactory);
assertEquals(2, ret.getSecond().size());
List<String> vals = new ArrayList<>(ret.getSecond().values());
assertEquals(true, vals.contains("NEGATIVE"));
assertEquals(true, vals.contains("none"));
assertEquals("This sucks really bad .", ret.getFirst());
}
}
