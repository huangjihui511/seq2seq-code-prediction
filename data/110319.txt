package de.codecentric.boot.admin.server.ui.config;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.annotation.Nullable;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.convert.DurationUnit;
import org.springframework.http.CacheControl;
import de.codecentric.boot.admin.server.ui.web.UiController;
@lombok.Data
@ConfigurationProperties("spring.boot.admin.ui")
public class AdminServerUiProperties {
private static final String[] CLASSPATH_RESOURCE_LOCATIONS = { "classpath:/META-INF/spring-boot-admin-server-ui/" };
private static final String[] CLASSPATH_EXTENSION_RESOURCE_LOCATIONS = {
"classpath:/META-INF/spring-boot-admin-server-ui/extensions/" };
private String[] resourceLocations = CLASSPATH_RESOURCE_LOCATIONS;
private String[] extensionResourceLocations = CLASSPATH_EXTENSION_RESOURCE_LOCATIONS;
private String templateLocation = CLASSPATH_RESOURCE_LOCATIONS[0];
private String loginIcon = "assets/img/icon-spring-boot-admin.svg";
private String favicon = "assets/img/favicon.png";
private String faviconDanger = "assets/img/favicon-danger.png";
private String title = "Spring Boot Admin";
private String brand = "<img src=\"assets/img/icon-spring-boot-admin.svg\"><span>Spring Boot Admin</span>";
@Nullable
private String publicUrl = null;
private boolean cacheTemplates = true;
private Cache cache = new Cache();
private List<UiController.ExternalView> externalViews = new ArrayList<>();
private boolean rememberMeEnabled = true;
@lombok.Data
public static class Cache {
@Nullable
@DurationUnit(ChronoUnit.SECONDS)
private Duration maxAge = Duration.ofSeconds(3600);
private Boolean noCache = false;
private Boolean noStore = false;
public CacheControl toCacheControl() {
if (Boolean.TRUE.equals(this.noStore)) {
return CacheControl.noStore();
}
if (Boolean.TRUE.equals(this.noCache)) {
return CacheControl.noCache();
}
if (this.maxAge != null) {
return CacheControl.maxAge(this.maxAge.getSeconds(), TimeUnit.SECONDS);
}
return CacheControl.empty();
}
}
}
