package com.oracle.svm.core.jdk;
import java.util.logging.LogManager;
import com.oracle.svm.core.annotate.Alias;
import com.oracle.svm.core.annotate.InjectAccessors;
import com.oracle.svm.core.annotate.TargetClass;
import jdk.internal.logger.SurrogateLogger;
class FormatAccessors {
private static String getLoggingProperty(String name) {
return LogManager.getLogManager().getProperty(name);
}
private static String format = null;
public static String getFormat(java.util.logging.SimpleFormatter parent) {
if (format == null) {
format = SurrogateLogger.getSimpleFormat(FormatAccessors::getLoggingProperty);
}
return format;
}
public static void setFormat(java.util.logging.SimpleFormatter parent, String f) {
format = f;
}
}
@TargetClass(value = java.util.logging.SimpleFormatter.class, onlyWith = JDK11OrLater.class)
public final class Target_java_util_logging_SimpleFormatter_JDK11OrLater {
@Alias @InjectAccessors(FormatAccessors.class)
private String format;
}
