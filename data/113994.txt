package com.flipkart.android.proteus.support.design.widget;
import android.content.Context;
import android.content.res.TypedArray;
import android.view.ViewGroup;
import com.flipkart.android.proteus.ProteusContext;
import com.flipkart.android.proteus.ProteusView;
import com.flipkart.android.proteus.ViewTypeParser;
import com.flipkart.android.proteus.processor.AttributeProcessor;
import com.flipkart.android.proteus.processor.BooleanAttributeProcessor;
import com.flipkart.android.proteus.processor.DimensionAttributeProcessor;
import com.flipkart.android.proteus.value.AttributeResource;
import com.flipkart.android.proteus.value.Layout;
import com.flipkart.android.proteus.value.ObjectValue;
import com.flipkart.android.proteus.value.Primitive;
import com.flipkart.android.proteus.value.Resource;
import com.flipkart.android.proteus.value.StyleResource;
import com.flipkart.android.proteus.value.Value;
import com.google.android.material.appbar.AppBarLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
public class AppBarLayoutParser<V extends AppBarLayout> extends ViewTypeParser<V> {
@NonNull
@Override
public String getType() {
return "AppBarLayout";
}
@Nullable
@Override
public String getParentType() {
return "LinearLayout";
}
@NonNull
@Override
public ProteusView createView(@NonNull ProteusContext context, @NonNull Layout layout, @NonNull ObjectValue data, @Nullable ViewGroup parent, int dataIndex) {
return new ProteusAppBarLayout(context);
}
@Override
protected void addAttributeProcessors() {
addAttributeProcessor("targetElevation", new DimensionAttributeProcessor<V>() {
@Override
public void setDimension(V view, float dimension) {
view.setTargetElevation(dimension);
}
});
addAttributeProcessor("orientation", new AttributeProcessor<V>() {
private final Primitive VERTICAL = new Primitive(AppBarLayout.VERTICAL);
private final Primitive HORIZONTAL = new Primitive(AppBarLayout.HORIZONTAL);
@Override
public void handleValue(V view, Value value) {
view.setOrientation(value.getAsInt());
}
@Override
public void handleResource(V view, Resource resource) {
Integer orientation = resource.getInteger(view.getContext());
if (orientation != null) {
view.setOrientation(orientation);
}
}
@Override
public void handleAttributeResource(V view, AttributeResource attribute) {
TypedArray a = attribute.apply(view.getContext());
int orientation = a.getInt(0, AppBarLayout.VERTICAL);
view.setOrientation(orientation);
}
@Override
public void handleStyleResource(V view, StyleResource style) {
TypedArray a = style.apply(view.getContext());
int orientation = a.getInt(0, AppBarLayout.VERTICAL);
view.setOrientation(orientation);
}
@Override
public Value compile(@Nullable Value value, Context context) {
if (null != value && value.isPrimitive()) {
String string = value.getAsString();
if ("vertical".equals(string)) {
return VERTICAL;
} else {
return HORIZONTAL;
}
} else {
return VERTICAL;
}
}
});
addAttributeProcessor("expanded", new BooleanAttributeProcessor<V>() {
@Override
public void setBoolean(V view, boolean value) {
view.setExpanded(value);
}
});
}
}
