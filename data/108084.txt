package io.dropwizard.auth;
import io.dropwizard.jersey.DropwizardResourceConfig;
import org.glassfish.jersey.internal.inject.AbstractBinder;
import org.glassfish.jersey.server.filter.RolesAllowedDynamicFeature;
import org.glassfish.jersey.test.TestProperties;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.container.DynamicFeature;
import java.security.Principal;
public abstract class AbstractAuthResourceConfig extends DropwizardResourceConfig {
public AbstractAuthResourceConfig() {
super();
property(TestProperties.CONTAINER_PORT, "0");
register(getAuthDynamicFeature(getAuthFilter()));
register(getAuthBinder());
register(RolesAllowedDynamicFeature.class);
}
protected Class<? extends Principal> getPrincipalClass() {
return Principal.class;
}
protected AbstractBinder getAuthBinder() {
return new AuthValueFactoryProvider.Binder<>(getPrincipalClass());
}
protected DynamicFeature getAuthDynamicFeature(ContainerRequestFilter authFilter) {
return new AuthDynamicFeature(authFilter);
}
protected abstract ContainerRequestFilter getAuthFilter();
}
