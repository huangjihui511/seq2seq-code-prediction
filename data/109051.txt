package io.vertx.core.spi;
import io.vertx.core.Future;
import io.vertx.core.impl.ContextInternal;
import io.vertx.core.impl.PromiseInternal;
public interface FutureFactory {
<T> PromiseInternal<T> promise();
<T> Future<T> succeededFuture();
<T> Future<T> succeededFuture(T result);
<T> Future<T> failedFuture(Throwable t);
<T> Future<T> failureFuture(String failureMessage);
<T> PromiseInternal<T> promise(ContextInternal context);
<T> Future<T> succeededFuture(ContextInternal context);
<T> Future<T> succeededFuture(ContextInternal context, T result);
<T> Future<T> failedFuture(ContextInternal context, Throwable t);
<T> Future<T> failedFuture(ContextInternal context, String failureMessage);
}
