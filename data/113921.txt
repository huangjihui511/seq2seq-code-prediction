package org.spongepowered.mod;
import static com.google.common.base.Preconditions.checkState;
import com.google.inject.Singleton;
import net.minecraft.server.MinecraftServer;
import net.minecraftforge.fml.common.FMLCommonHandler;
import org.spongepowered.api.GameDictionary;
import org.spongepowered.api.Server;
import org.spongepowered.api.util.annotation.NonnullByDefault;
import org.spongepowered.common.SpongeGame;
import org.spongepowered.mod.registry.SpongeForgeGameDictionary;
import java.nio.file.Path;
import java.util.Optional;
@NonnullByDefault
@Singleton
public final class SpongeModGame extends SpongeGame {
@Override
public Path getSavesDirectory() {
return FMLCommonHandler.instance().getSavesDirectory().toPath();
}
@Override
public boolean isServerAvailable() {
return FMLCommonHandler.instance().getSidedDelegate().getServer() != null;
}
@Override
public Server getServer() {
final MinecraftServer server = FMLCommonHandler.instance().getSidedDelegate().getServer();
checkState(server != null, "Server has not been initialized yet!");
return (Server) server;
}
@Override
public Optional<GameDictionary> getGameDictionary() {
return Optional.of(SpongeForgeGameDictionary.instance);
}
}
