package com.JUtils.date;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Date;
public class DateFormatUtils {
public static final String DATE_YEAR = "yyyy";
public static final String DATE_MONTH = "MM";
public static final String DATE_DAY = "dd";
public static final String DATE_HOUR = "HH";
public static final String DATE_MINUTE = "mm";
public static final String DATE_SECONDES = "ss";
public static final String DATE_FORMAT1 = "yyyy-MM-dd";
public static final String DATE_FORMAT2 = "yyyy-MM-dd HH:mm:ss";
public static final String TIME_FORMAT_SSS = "yyyy-MM-dd HH:mm:ss|SSS";
public static final String DATE_NOFUll_FORMAT = "yyyyMMdd";
public static final String TIME_NOFUll_FORMAT = "yyyyMMddHHmmss";
public static String formatString(String value) {
String sReturn = "";
if (value == null || "".equals(value))
return sReturn;
sReturn = value.substring(0, 4) + "-" + value.substring(4, 6) + "-" + value.substring(6, 8) + " "
+ value.substring(8, 10) + ":" + value.substring(10, 12) + ":" + value.substring(12, 14);
return sReturn;
}
sReturn = value.substring(0, 4) + value.substring(5, 7) + value.substring(8, 10) + value.substring(11, 13)
+ value.substring(14, 16) + value.substring(17, 19);
return sReturn;
}
sReturn = value.substring(0, 4) + value.substring(5,7) + value.substring(8,10);
}
sReturn = value.substring(0, 4) + "-" + value.substring(4, 6) + "-" + value.substring(6, 8);
}
return sReturn;
}
public static String formatDate(String date, String format) {
if (date == null || "".equals(date)){
return "";
}
Date dt = null;
SimpleDateFormat inFmt = null;
SimpleDateFormat outFmt = null;
ParsePosition pos = new ParsePosition(0);
date = date.replace("-", "").replace(":", "");
if ((date == null) || ("".equals(date.trim())))
return "";
try {
if (Long.parseLong(date) == 0L)
return "";
} catch (Exception nume) {
return date;
}
try {
switch (date.trim().length()) {
case 14:
inFmt = new SimpleDateFormat("yyyyMMddHHmmss");
break;
case 12:
inFmt = new SimpleDateFormat("yyyyMMddHHmm");
break;
case 10:
inFmt = new SimpleDateFormat("yyyyMMddHH");
break;
case 8:
inFmt = new SimpleDateFormat("yyyyMMdd");
break;
case 6:
inFmt = new SimpleDateFormat("yyyyMM");
break;
case 7:
case 9:
case 11:
case 13:
default:
return date;
}
if ((dt = inFmt.parse(date, pos)) == null)
return date;
if ((format == null) || ("".equals(format.trim()))) {
} else {
outFmt = new SimpleDateFormat(format);
}
return outFmt.format(dt);
} catch (Exception ex) {
}
return date;
}
public static String formatDate(Date date,String format){
return formatDate(DateUtils.date2String(date), format);
}
public static String formatDate(String value){
return getFormat(DATE_FORMAT2).format(DateUtils.string2Date(value, DATE_FORMAT2));
}
public static String formatDate(Date value){
return formatDate(DateUtils.date2String(value));
}
protected static SimpleDateFormat getFormat(String format){
if(format == null || "".equals(format)){
format = DATE_FORMAT2;
}
return new SimpleDateFormat(format);
}
}
