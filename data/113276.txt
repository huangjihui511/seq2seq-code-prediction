package org.pf4j;
public class ExtensionWrapper<T> implements Comparable<ExtensionWrapper<T>> {
private final ExtensionDescriptor descriptor;
private final ExtensionFactory extensionFactory;
private T extension; 
public ExtensionWrapper(ExtensionDescriptor descriptor, ExtensionFactory extensionFactory) {
this.descriptor = descriptor;
this.extensionFactory = extensionFactory;
}
@SuppressWarnings("unchecked")
public T getExtension() {
if (extension == null) {
extension = (T) extensionFactory.create(descriptor.extensionClass);
}
return extension;
}
public ExtensionDescriptor getDescriptor() {
return descriptor;
}
public int getOrdinal() {
return descriptor.ordinal;
}
@Override
public int compareTo(ExtensionWrapper<T> o) {
return (getOrdinal() - o.getOrdinal());
}
}
