package net.pms.io;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import org.apache.commons.io.IOUtils;
import org.apache.commons.io.LineIterator;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
public class OutputTextLogger extends OutputConsumer {
private static final Logger LOGGER = LoggerFactory.getLogger(OutputTextLogger.class);
public OutputTextLogger(InputStream inputStream) {
super(inputStream);
}
@Deprecated
public OutputTextLogger(InputStream inputStream, ProcessWrapperImpl pwi) {
this(inputStream);
}
@Override
public void run() {
LineIterator it = null;
try {
it = IOUtils.lineIterator(inputStream, "UTF-8");
while (it.hasNext()) {
String line = it.nextLine();
LOGGER.debug(line);
if (filtered) {
filtered = filter(line);
}
}
} catch (IOException ioe) {
LOGGER.debug("Error consuming input stream: {}", ioe.getMessage());
} catch (IllegalStateException ise) {
LOGGER.debug("Error reading from closed input stream: {}", ise.getMessage());
} finally {
LineIterator.closeQuietly(it); 
}
}
@Override
public BufferedOutputFile getBuffer() {
return null;
}
@Override
public List<String> getResults() {
return null;
}
}
