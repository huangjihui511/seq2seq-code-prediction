package org.dstadler.jgit.server;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletHandler;
import org.eclipse.jetty.servlet.ServletHolder;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.http.server.GitServlet;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
import java.io.File;
import java.io.IOException;
public class Main {
public static void main(String[] args) throws Exception {
Repository repository = createNewRepository();
populateRepository(repository);
GitServlet gs = new GitServlet();
gs.setRepositoryResolver((req, name) -> {
repository.incrementOpen();
return repository;
});
Server server = configureAndStartHttpServer(gs);
server.join();
}
private static Server configureAndStartHttpServer(GitServlet gs) throws Exception {
Server server = new Server(8080);
ServletHandler handler = new ServletHandler();
server.setHandler(handler);
ServletHolder holder = new ServletHolder(gs);
handler.addServletWithMapping(holder, "/*");
server.start();
return server;
}
private static void populateRepository(Repository repository) throws IOException, GitAPIException {
try (Git git = new Git(repository)) {
File myfile = new File(repository.getDirectory().getParent(), "testfile");
if(!myfile.createNewFile()) {
throw new IOException("Could not create file " + myfile);
}
git.add().addFilepattern("testfile").call();
System.out.println("Added file " + myfile + " to repository at " + repository.getDirectory());
git.commit().setMessage("Test-Checkin").call();
}
}
private static Repository createNewRepository() throws IOException {
File localPath = File.createTempFile("TestGitRepository", "");
if(!localPath.delete()) {
throw new IOException("Could not delete temporary file " + localPath);
}
if(!localPath.mkdirs()) {
throw new IOException("Could not create directory " + localPath);
}
Repository repository = FileRepositoryBuilder.create(new File(localPath, ".git"));
repository.create();
return repository;
}
}
