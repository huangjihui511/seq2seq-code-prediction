package com.facebook.presto.sql.planner.iterative.rule;
import com.facebook.presto.matching.Captures;
import com.facebook.presto.matching.Pattern;
import com.facebook.presto.sql.planner.iterative.Rule;
import com.facebook.presto.sql.planner.plan.OutputNode;
import com.google.common.collect.ImmutableSet;
import static com.facebook.presto.sql.planner.iterative.rule.Util.restrictChildOutputs;
import static com.facebook.presto.sql.planner.plan.Patterns.output;
public class PruneOutputColumns
implements Rule<OutputNode>
{
private static final Pattern<OutputNode> PATTERN = output();
@Override
public Pattern<OutputNode> getPattern()
{
return PATTERN;
}
@Override
public Result apply(OutputNode outputNode, Captures captures, Context context)
{
return restrictChildOutputs(
context.getIdAllocator(),
outputNode,
ImmutableSet.copyOf(outputNode.getOutputVariables()))
.map(Result::ofPlanNode)
.orElse(Result.empty());
}
}
