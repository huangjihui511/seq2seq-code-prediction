package org.jb2011.lnf.beautyeye.ch10_internalframe;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Insets;
import javax.swing.JComponent;
import javax.swing.UIManager;
import javax.swing.plaf.ComponentUI;
import javax.swing.plaf.basic.BasicDesktopIconUI;
public class BEDesktopIconUI extends BasicDesktopIconUI
{
private int width;
public static ComponentUI createUI(JComponent c)
{
return new BEDesktopIconUI();
}
public void installDefaults()
{
super.installDefaults();
width = UIManager.getInt("DesktopIcon.width");
}
public void installUI(JComponent c)
{
super.installUI(c);
c.setOpaque(false);
}
public void uninstallUI(JComponent c)
{
BEInternalFrameTitlePane thePane = (BEInternalFrameTitlePane)iconPane;
super.uninstallUI(c);
thePane.uninstallListeners();
}
protected void installComponents()
{
iconPane = new BEInternalFrameTitlePane(frame){
protected void paintTitlePaneImpl(Insets frameInsets,Graphics g
, int width,int height, boolean isSelected)
{
Insets instes = new Insets(0,0,0,0);
super.paintTitlePaneImpl(instes, g, width, height, isSelected);
}
};
desktopIcon.setLayout(new BorderLayout());
desktopIcon.add(iconPane, BorderLayout.CENTER);
desktopIcon.setBorder(UIManager.getBorder("InternalFrame.border"));
}
public Dimension getPreferredSize(JComponent c)
{
return getMinimumSize(c);
}
public Dimension getMinimumSize(JComponent c)
{
return new Dimension(width,
desktopIcon.getLayout().minimumLayoutSize(desktopIcon).height);
}
}
