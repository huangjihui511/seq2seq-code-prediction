package net.i2p.router;
import java.io.IOException;
import java.io.Writer;
import java.util.Collections;
import java.util.Set;
import net.i2p.client.I2PSessionException;
import net.i2p.crypto.SessionKeyManager;
import net.i2p.data.Destination;
import net.i2p.data.Hash;
import net.i2p.data.LeaseSet;
import net.i2p.data.i2cp.MessageId;
import net.i2p.data.i2cp.SessionConfig;
public abstract class ClientManagerFacade implements Service {
public static final String PROP_CLIENT_ONLY = "i2cp.dontPublishLeaseSet";
public abstract void requestLeaseSet(Destination dest, LeaseSet set, long timeout, Job onCreateJob, Job onFailedJob);
public abstract void requestLeaseSet(Hash dest, LeaseSet set);
public abstract void reportAbuse(Destination dest, String reason, int severity);
public abstract boolean isLocal(Destination dest);
public abstract boolean isLocal(Hash destHash);
public abstract void messageDeliveryStatusUpdate(Destination fromDest, MessageId id,
long messageNonce, int status);
public abstract void messageReceived(ClientMessage msg);
public boolean verifyClientLiveliness() { return true; }
public boolean isAlive() { return true; }
public boolean shouldPublishLeaseSet(Hash destinationHash) { return true; }
public Set<Destination> listClients() { return Collections.emptySet(); }
public abstract SessionConfig getClientSessionConfig(Destination dest);
public abstract SessionKeyManager getClientSessionKeyManager(Hash dest);
public void renderStatusHTML(Writer out) throws IOException { }
public abstract void shutdown(String msg);
public void registerMetaDest(Destination dest) throws I2PSessionException {}
public void unregisterMetaDest(Destination dest) {}
}
