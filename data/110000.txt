package com.google.cloud.tools.jib.event.events;
import com.google.cloud.tools.jib.api.LogEvent;
import com.google.cloud.tools.jib.api.LogEvent.Level;
import com.google.cloud.tools.jib.event.EventHandlers;
import java.util.ArrayDeque;
import java.util.Deque;
import org.junit.Assert;
import org.junit.Test;
public class LogEventTest {
private final Deque<LogEvent> receivedLogEvents = new ArrayDeque<>();
private final EventHandlers eventHandlers =
EventHandlers.builder().add(LogEvent.class, receivedLogEvents::offer).build();
@Test
public void testFactories() {
eventHandlers.dispatch(LogEvent.error("error"));
eventHandlers.dispatch(LogEvent.lifecycle("lifecycle"));
eventHandlers.dispatch(LogEvent.progress("progress"));
eventHandlers.dispatch(LogEvent.warn("warn"));
eventHandlers.dispatch(LogEvent.info("info"));
eventHandlers.dispatch(LogEvent.debug("debug"));
verifyNextLogEvent(Level.ERROR, "error");
verifyNextLogEvent(Level.LIFECYCLE, "lifecycle");
verifyNextLogEvent(Level.PROGRESS, "progress");
verifyNextLogEvent(Level.WARN, "warn");
verifyNextLogEvent(Level.INFO, "info");
verifyNextLogEvent(Level.DEBUG, "debug");
Assert.assertTrue(receivedLogEvents.isEmpty());
}
private void verifyNextLogEvent(Level level, String message) {
Assert.assertFalse(receivedLogEvents.isEmpty());
LogEvent logEvent = receivedLogEvents.poll();
Assert.assertEquals(level, logEvent.getLevel());
Assert.assertEquals(message, logEvent.getMessage());
}
}
