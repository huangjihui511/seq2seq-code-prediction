package org.spongepowered.mod.test.integration.regression;
import static org.hamcrest.MatcherAssert.assertThat;
import org.hamcrest.Matchers;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.spongepowered.api.Sponge;
import org.spongepowered.api.block.BlockTypes;
import org.spongepowered.api.data.type.HandTypes;
import org.spongepowered.api.entity.living.player.gamemode.GameModes;
import org.spongepowered.api.item.ItemTypes;
import org.spongepowered.api.item.inventory.ItemStack;
import org.spongepowered.api.world.DimensionTypes;
import org.spongepowered.api.world.GeneratorTypes;
import org.spongepowered.api.world.Location;
import org.spongepowered.api.world.World;
import org.spongepowered.api.world.WorldArchetype;
import org.spongepowered.api.world.difficulty.Difficulties;
import org.spongepowered.api.world.storage.WorldProperties;
import org.spongepowered.common.test.RegressionTest;
import org.spongepowered.mctester.api.junit.MinecraftRunner;
import org.spongepowered.mctester.internal.BaseTest;
import org.spongepowered.mctester.junit.TestUtils;
import java.util.Optional;
@RunWith(MinecraftRunner.class)
@RegressionTest(ghIssue = "https:
public class CrossDimensionCommandBlock extends BaseTest  {
public CrossDimensionCommandBlock(TestUtils testUtils) {
super(testUtils);
}
@Test
public void testUseCommandBlock() throws Throwable {
Location<World> targetPosition = this.testUtils.runOnMainThread(() -> {
WorldProperties worldProperties = Sponge.getServer().createWorldProperties("the_command_block_world",
WorldArchetype.builder().commandsAllowed(true).difficulty(Difficulties.PEACEFUL)
.dimension(DimensionTypes.OVERWORLD)
.enabled(true)
.gameMode(GameModes.CREATIVE)
.generator(GeneratorTypes.FLAT)
.build("mctester:command_block_world", "Command block World"));
World world = Sponge.getServer().loadWorld(worldProperties).get();
final Location<World> spawnLocation = world.getSpawnLocation();
this.testUtils.getThePlayer().setLocation(spawnLocation);
this.testUtils.getThePlayer().setItemInHand(HandTypes.MAIN_HAND, ItemStack.of(ItemTypes.COMMAND_BLOCK, 1));
return this.testUtils.getThePlayer().getLocation().add(0, 1, 1);
});
this.testUtils.waitForWorldChunks();
this.testUtils.waitForInventoryPropagation();
this.client.lookAt(targetPosition.getPosition());
if (!this.testUtils.runOnMainThread(targetPosition::getBlockType).equals(BlockTypes.AIR)) {
this.client.leftClick();
}
this.client.rightClick();
this.client.rightClick();
Optional<String> guiClass = this.client.getOpenGuiClass();
assertThat("Failed to open command block gui!", guiClass, Matchers.equalTo(Optional.of("net.minecraft.client.gui.GuiCommandBlock")));
}
}
