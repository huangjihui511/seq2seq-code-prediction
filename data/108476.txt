package com.oracle.svm.core.hub;
import java.lang.annotation.Annotation;
import java.util.HashMap;
import java.util.Map;
import org.graalvm.nativeimage.ImageSingletons;
import org.graalvm.nativeimage.Platform;
import org.graalvm.nativeimage.Platforms;
import com.oracle.svm.core.annotate.Substitute;
import com.oracle.svm.core.annotate.TargetClass;
import sun.reflect.annotation.AnnotationType;
public class AnnotationTypeSupport {
private Map<Class<? extends Annotation>, AnnotationType> annotationTypeMap = new HashMap<>();
@Platforms(Platform.HOSTED_ONLY.class)
public void createInstance(Class<? extends Annotation> annotationClass) {
annotationTypeMap.putIfAbsent(annotationClass, AnnotationType.getInstance(annotationClass));
}
public AnnotationType getInstance(Class<? extends Annotation> annotationClass) {
return annotationTypeMap.get(annotationClass);
}
}
@TargetClass(className = "sun.reflect.annotation.AnnotationType")
final class Target_sun_reflect_annotation_AnnotationType {
@Substitute
public static AnnotationType getInstance(Class<? extends Annotation> annotationClass) {
return ImageSingletons.lookup(AnnotationTypeSupport.class).getInstance(annotationClass);
}
}
