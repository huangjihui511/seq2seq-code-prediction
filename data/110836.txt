package org.jsoup.parser;
import org.jsoup.nodes.Document;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
public class ParserIT {
@Test
public void testIssue1251() {
StringBuilder str = new StringBuilder("<a href=\"\"ca");
for (int countSpaces = 0; countSpaces < 100000; countSpaces++) {
try {
Parser.htmlParser().setTrackErrors(1).parseInput(str.toString(), "");
} catch (Exception e) {
throw new AssertionError("failed at length " + str.length(), e);
}
str.insert(countSpaces, ' ');
}
}
@Test
public void handlesDeepStack() {
StringBuilder longBody = new StringBuilder(500000);
for (int i = 0; i < 25000; i++) {
longBody.append(i).append("<dl><dd>");
}
for (int i = 0; i < 25000; i++) {
longBody.append(i).append("</dd></dl>");
}
long start = System.currentTimeMillis();
Document doc = Parser.parseBodyFragment(longBody.toString(), "");
assertEquals(2, doc.body().childNodeSize());
assertEquals(25000, doc.select("dd").size());
assertTrue(System.currentTimeMillis() - start < 20000); 
}
}
