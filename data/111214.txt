package com.github.benmanes.caffeine.cache.impl;
import static java.util.Objects.requireNonNull;
import java.util.concurrent.ConcurrentMap;
import com.github.benmanes.caffeine.cache.BasicCache;
public final class ConcurrentMapCache<K, V> implements BasicCache<K, V> {
private final ConcurrentMap<K, V> map;
public ConcurrentMapCache(ConcurrentMap<K, V> map) {
this.map = requireNonNull(map);
}
@Override
public V get(K key) {
return map.get(key);
}
@Override
public void put(K key, V value) {
map.put(key, value);
}
@Override
public void clear() {
map.clear();
}
}
