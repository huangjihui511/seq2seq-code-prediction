package io.github.bonigarcia.wdm.test;
import static java.io.File.separator;
import static java.lang.invoke.MethodHandles.lookup;
import static java.util.Arrays.asList;
import static org.junit.Assert.assertTrue;
import static org.slf4j.LoggerFactory.getLogger;
import java.io.File;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameter;
import org.junit.runners.Parameterized.Parameters;
import org.slf4j.Logger;
import io.github.bonigarcia.wdm.VoidDriverManager;
import io.github.bonigarcia.wdm.WebDriverManager;
@RunWith(Parameterized.class)
public class VersionFilterTest {
final Logger log = getLogger(lookup().lookupClass());
@Parameter(0)
public String version;
@Parameter(1)
public int expectedVersions;
@Parameters(name = "{index}: {0}")
public static Collection<Object[]> data() {
return asList(new Object[][] { { "74", 1 }, { "77", 1 }, { "79", 2 } });
}
@Test
public void testFilterCacheBy() {
new VoidDriverManager() {
public WebDriverManager callFilterCacheBy(List<File> input,
String key) {
List<File> filteredList = filterCacheBy(input, key, true);
log.debug("Version {} -- Output {}", version, filteredList);
assertTrue(filteredList.size() == expectedVersions);
return this;
}
}.callFilterCacheBy(getInputFileList(), version);
assertTrue(true);
}
private List<File> getInputFileList() {
List<File> output = new ArrayList<>();
File currentFolder = new File(".");
String[] versions = { "74.0.3729.6", "75.0.3770.140", "75.0.3770.8",
"75.0.3770.90", "76.0.3809.126", "76.0.3809.68", "77.0.3865.40",
"78.0.3904.70", "79.0.3945.16", "79.0.3945.36" };
for (String v : versions) {
output.add(new File(currentFolder, v + separator + "chromedriver"));
}
return output;
}
}
