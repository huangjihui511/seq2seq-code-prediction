package docoverride.json;
import io.vertx.core.http.HttpServerRequest;
import io.vertx.core.json.Json;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.pointer.JsonPointer;
import io.vertx.docgen.Source;
import java.net.URI;
import java.util.HashMap;
import java.util.Map;
@Source
public class Examples {
public void example0_1() {
String jsonString = "{\"foo\":\"bar\"}";
JsonObject object = new JsonObject(jsonString);
}
public void exampleCreateFromMap() {
Map<String, Object> map = new HashMap<>();
map.put("foo", "bar");
map.put("xyz", 3);
JsonObject object = new JsonObject(map);
}
public void example0_2() {
String jsonString = "[\"foo\",\"bar\"]";
JsonArray array = new JsonArray(jsonString);
}
public void example1() {
JsonObject object = new JsonObject();
object.put("foo", "bar").put("num", 123).put("mybool", true);
}
private static class User {
User(String firstName, String lastName) {
}
}
public void mapFromPojo(HttpServerRequest request) {
User user = new User("Dale", "Cooper");
JsonObject jsonObject = JsonObject.mapFrom(user);
}
public void mapToPojo(HttpServerRequest request) {
request.bodyHandler(buff -> {
JsonObject jsonObject = buff.toJsonObject();
User javaObject = jsonObject.mapTo(User.class);
});
}
public void example2(JsonObject jsonObject) {
String val = jsonObject.getString("some-key");
int intVal = jsonObject.getInteger("some-other-key");
}
public void example3() {
JsonArray array = new JsonArray();
array.add("foo").add(123).add(false);
}
public void example4(JsonArray array) {
String val = array.getString(0);
Integer intVal = array.getInteger(1);
Boolean boolVal = array.getBoolean(2);
}
public void example5(String arbitraryJson) {
Object object = Json.decodeValue(arbitraryJson);
if (object instanceof JsonObject) {
} else if (object instanceof JsonArray) {
} else if (object instanceof String) {
} else {
}
}
}
