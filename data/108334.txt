package org.apache.flink.client.program.rest;
import org.apache.flink.configuration.Configuration;
import org.apache.flink.configuration.RestOptions;
import org.apache.flink.runtime.rest.RestClientConfiguration;
import org.apache.flink.util.ConfigurationException;
import org.apache.flink.util.Preconditions;
import static org.apache.flink.util.Preconditions.checkArgument;
public final class RestClusterClientConfiguration {
private final RestClientConfiguration restClientConfiguration;
private final long awaitLeaderTimeout;
private final int retryMaxAttempts;
private final long retryDelay;
private RestClusterClientConfiguration(
final RestClientConfiguration endpointConfiguration,
final long awaitLeaderTimeout,
final int retryMaxAttempts,
final long retryDelay) {
checkArgument(awaitLeaderTimeout >= 0, "awaitLeaderTimeout must be equal to or greater than 0");
checkArgument(retryMaxAttempts >= 0, "retryMaxAttempts must be equal to or greater than 0");
checkArgument(retryDelay >= 0, "retryDelay must be equal to or greater than 0");
this.restClientConfiguration = Preconditions.checkNotNull(endpointConfiguration);
this.awaitLeaderTimeout = awaitLeaderTimeout;
this.retryMaxAttempts = retryMaxAttempts;
this.retryDelay = retryDelay;
}
public RestClientConfiguration getRestClientConfiguration() {
return restClientConfiguration;
}
public long getAwaitLeaderTimeout() {
return awaitLeaderTimeout;
}
public int getRetryMaxAttempts() {
return retryMaxAttempts;
}
public long getRetryDelay() {
return retryDelay;
}
public static RestClusterClientConfiguration fromConfiguration(Configuration config) throws ConfigurationException {
RestClientConfiguration restClientConfiguration = RestClientConfiguration.fromConfiguration(config);
final long awaitLeaderTimeout = config.getLong(RestOptions.AWAIT_LEADER_TIMEOUT);
final int retryMaxAttempts = config.getInteger(RestOptions.RETRY_MAX_ATTEMPTS);
final long retryDelay = config.getLong(RestOptions.RETRY_DELAY);
return new RestClusterClientConfiguration(restClientConfiguration, awaitLeaderTimeout, retryMaxAttempts, retryDelay);
}
}
